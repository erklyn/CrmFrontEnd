{"version":3,"sources":["Models/UIWrappers/Textfield/index.js","Models/UIWrappers/Select/index.js","Models/UIWrappers/Button/index.js","Controllers/StoreSession.js","Views/NewCustomerPage.js","Views/Customers.js","Views/CustomerPage.js","Models/UIWrappers/Header/NavbarItems.js","Models/UIWrappers/Header/index.js","Views/PropositionPage.js","Models/UIWrappers/DateTimePicker/index.js","Views/CreatePropositionPage.js","Views/LoginPage.js","Views/CreateMeeting.js","Views/CreateUser.js","Models/UIWrappers/HomepageGorusmeler/index.js","Models/UIWrappers/HomepageTeklifler/index.js","Models/UIWrappers/HomepageTamamlanmamış/index.js","Views/HomePage.js","Views/Meeting.js","Views/EditCustomer.js","App.js","index.js"],"names":["TextFieldWrapper","name","otherProps","useField","field","meta","configTextField","fullWidth","variants","margin","touched","error","helperText","TextField","SelectWrapper","options","setFieldValue","useFormikContext","setValue","configSelect","select","variant","onChanged","evt","value","target","Object","keys","map","item","pos","MenuItem","ButtonWrapper","children","submitForm","configButton","color","onClick","Button","Axios","defaults","withCredentials","CustomerContext","createContext","useCustomer","useContext","CustomerWrapper","useState","customer","setCustomer","working","setWorking","refreshToken","a","post","then","response","data","useEffect","Provider","NewCustomerPage","INITIAL_FORM_STATE","firmaAdi","firmaAdresi","firmaMail","firmaAractipi","firmaIlgilisi","firmaTelefon","musteriRisk","temsilciID","id","temsilciAdi","adi","FORM_VALIDATION","Yup","shape","required","email","firmaSehir","firmaUlke","navigate","useNavigate","departman","Grid","container","marginTop","xs","Container","initialValues","validationSchema","onSubmit","values","resetForm","alert","spacing","Typography","Textfield","label","Select","riskseviyesi","trailers","countries","multiline","rows","city","Customers","musteriler","setMusteriler","get","className","searchValue","direction","justifyContent","alignItems","musteri","to","CustomerPage","setMusteri","gorusme","setGorusme","teklifler","setTeklifler","params","useParams","getDate","gorusmeDa","date","Date","year","getFullYear","month","getMonth","dt","marginBottom","md","lg","Paper","elevation","align","tarih","aracTipi","konusu","teklif","teklifTarih","durum","birimFiyati","navItems","title","path","cName","navItemsAdmin","Header","handleClick","isAdmin","PropositionPage","wrap","marginLeft","musteriID","adet","paraBirimi","pesinatMiktari","odemeSekli","vadeSure","teslimTarihi","neden","teklifNotu","DateTimePicker","configDateTimePicker","type","InputLabelProps","shrink","CreatePropositionPage","teslimYeri","not","paracins","instance","create","username","password","LoginPage","CreateMeeting","gorusmeKonusu","gorusmeOzeti","gorusmeTarihi","gorusmeYeri","aractipi","mail","soyadi","CreateUser","departmans","HomePageGorusme","gorusmeler","setGorusmeler","padding","HomePageTeklifler","HomePageTamamlanmamışTeklifler","redTeklifler","setRedTeklifler","HomePage","kullaniciAdi","Meeting","ozet","EditCustomer","initvalues","setInıtvalues","process","App","exact","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.daf2331c.chunk.js","sourcesContent":["import React from 'react';\nimport {TextField} from '@mui/material';\nimport {useField} from 'formik';\n\nconst TextFieldWrapper = ({\n    name,\n    ...otherProps\n}) => {\n    const [field ,meta] = useField(name);\n\n     const configTextField = {\n          ...field,\n          ...otherProps,\n          fullWidth: true,\n          variants: 'outlined' ,\n          margin: 'dense'\n        \n     };\n     if (meta && meta.touched && meta.error){\n         configTextField.error = true;\n         configTextField.helperText = meta.error;\n     } \n    \n    return (\n        <TextField {...configTextField}/>\n    );\n};\n\nexport default TextFieldWrapper","import React from 'react';\nimport {TextField , MenuItem} from '@mui/material';\nimport {useField , useFormikContext} from 'formik';\n\nconst SelectWrapper = ({\n    name,\n    options,\n    ...otherProps\n}) => {\n    const { setFieldValue } = useFormikContext();\n    const[field, meta] = useField(name);\n    const[value, setValue] = useField('');\n\n    const handleChange = evt => {\n        const { value } = evt.target;\n        setFieldValue(name , value);\n        setValue(value);\n    };\n\n    const configSelect ={\n        ...field,\n        ...otherProps,\n        select: true,\n        variant: 'outlined',\n        fullWidth: true,\n        onChanged: handleChange\n    }\n    if (meta && meta.touched && meta.error) {\n        configSelect.error = true;\n        configSelect.helperText = meta.error;\n    };\n    \n    return (\n        <TextField {...configSelect}> \n            {Object.keys(options).map((item, pos) => {\n                return (\n                    <MenuItem key={pos} value={item}>\n                        {options[item]}\n                    </MenuItem>\n                )\n            })}\n        </TextField>\n    );\n};\n\n\nexport default SelectWrapper;","import React from 'react';\nimport { Button} from '@mui/material';\nimport { useFormikContext } from 'formik';\n\n\nconst ButtonWrapper = ({\n    children,\n    ...otherProps\n}) => {\n    const { submitForm } = useFormikContext();\n\n    const handleSubmit =  () => {\n        submitForm();\n        \n    }\n\n    const configButton = {\n        variant:'contained',\n        color: 'primary',\n        fullWidth: true,\n        onClick: handleSubmit\n    }\n\n    return (\n        <Button\n        {...configButton}\n        >\n            {children}\n        </Button>\n    );\n};\n\nexport default ButtonWrapper;","import { useState, createContext, useContext, useEffect } from \"react\";\nimport Axios from 'axios';\nAxios.defaults.withCredentials = true;\n\n\n\nexport const CustomerContext = createContext([]);\n\nexport const useCustomer = () => useContext(CustomerContext);\n\nexport const CustomerWrapper = ({ children }) => {\n  const [customer, setCustomer] = useState(null);\n  const [working, setWorking] = useState(true);\n\n  const refreshToken = async () => {\n\n    \n    await Axios.post(''+process.env.REACT_APP_URL+'/api/currentUser').then((response) =>{\n        \n        setCustomer(response.data)\n    })\n    setWorking(false)\n        \n  };  \n      \n  \n\n  useEffect(() => {\n    refreshToken();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <CustomerContext.Provider value={{ customer , setCustomer }}>\n      {working ? null : children}\n    </CustomerContext.Provider>\n  );\n};","import React ,{ useEffect } from 'react'\nimport { Formik , Form } from 'formik';\nimport * as Yup from 'yup'; \nimport {\n  Container,\n  Grid,\n  Typography\n} from '@mui/material';\nimport Axios from 'axios';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Select from '../Models/UIWrappers/Select';\nimport Button from '../Models/UIWrappers/Button';\nimport countries from '../Models/Data/countries.json';\nimport city from '../Models/Data/turkey-city.json';\nimport trailers from '../Models/Data/trailers.json';\nimport riskseviyesi from '../Models/Data/dereceler.json'\nimport { useNavigate } from 'react-router-dom';\nimport { useCustomer } from '../Controllers/StoreSession';\n\nAxios.defaults.withCredentials = true;\n\n\n\n\nexport default function NewCustomerPage() {\n\n  const {customer , setCustomer} = useCustomer();\n  \n  const INITIAL_FORM_STATE ={\n    firmaAdi:'',\n    firmaAdresi:'',\n    firmaMail:'',\n    firmaAractipi:'',\n    firmaIlgilisi:'',\n    firmaTelefon:'',\n    musteriRisk:'Belirtilmedi',\n    temsilciID:customer.id,\n    temsilciAdi:customer.adi\n  };\n  \n  \n  const FORM_VALIDATION = Yup.object().shape({\n      firmaAdi: Yup.string()\n      .required('Müşteri Ünvanını giriniz!'),\n  \n      firmaAdresi: Yup.string()\n      .required('Müşteri Adresini giriniz'),\n  \n      firmaMail: Yup.string()\n      .email('Mail adresi yanlış girildi')\n      .required('Lütfen müşteri mail adresini giriniz'),\n  \n      firmaIlgilisi: Yup.string()\n      .required('Lütfen doldurunuz.'),\n  \n      firmaTelefon: Yup.string().required('Lütfen telefon numarasını giriniz...'),\n  \n      firmaAractipi: Yup.string(),\n  \n      firmaSehir: Yup.string(),\n  \n      firmaUlke: Yup.string(),\n  });\n\n\n  useEffect(()=>{\n        \n    Axios.post(''+process.env.REACT_APP_URL+'/api/currentUser').then((response) =>{\n    \n                setCustomer(response.data)\n            })\n            \n    \n  },[]);\n\n\n\n\n\n   let navigate = useNavigate();\n   if(customer.departman === \"dis-satis\") {\n     return (\n      <Grid container marginTop={2}>\n    \n      <Grid item xs={12}>\n        <Container>\n          <div >\n            <Formik\n            initialValues ={{\n              ...INITIAL_FORM_STATE,\n              firmaSehir:'Beriltilmedi'\n            }}\n            validationSchema ={FORM_VALIDATION}\n            onSubmit={ (values ,{ resetForm}) =>{\n              \n              Axios.post(\"\"+process.env.REACT_APP_URL+\"/api/insert/musteri\",{values}).then(()=>{\n                alert('succesfull insert');\n                \n              });\n              resetForm();\n              navigate('/musteriler')\n              \n            }}\n            >\n              <Form>\n                <Grid container spacing={2}>\n                 \n                  <Grid item xs={12} >\n                    <Typography>Müşteri Bilgileri</Typography>\n                  </Grid>\n  \n                    <Grid item xs={6}> \n                  <Textfield \n                    name= \"firmaAdi\"\n                    label=\"Müşteri Ünvanı\"\n                    />\n                  </Grid>\n                  \n                  <Grid item xs={6}> \n                  <Textfield \n                    name= \"firmaIlgilisi\"\n                    label=\"Müşteri İlgili Kişisi Adı\"\n                    />\n                  </Grid>\n                  <Grid item xs={6}> \n                    <Select\n                      name='musteriRisk'\n                      label='Müşteri Risk Seviyesi'\n                      options={riskseviyesi} \n                      />\n                  </Grid>\n                  <Grid item xs={6}> \n                  <Select\n                    name= \"firmaAractipi\"\n                    label=\"Müşteri Araç Tipi\"\n                    options={trailers}\n                    />\n                  </Grid>\n  \n                  <Grid item xs={4}> \n                  <Textfield \n                    name= \"firmaMail\"\n                    label=\"Müşteri E-Mail Adresi\"\n                    />\n                  </Grid>\n                  \n                  <Grid item xs={4}> \n                  <Textfield \n                    name= \"firmaTelefon\"\n                    label=\"Müşteri Telefon Numarası\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={4}> \n                    <Select\n                      name='firmaUlke'\n                      label='Müşteri Ülkesi'\n                      options={countries} \n                      />\n                  </Grid>\n  \n                  <Grid item xs={12}> \n                  <Textfield \n                    name= \"firmaAdresi\"\n                    label=\"Müşteri Adresi\"\n                    multiline\n                    rows={3}\n                    />\n                  </Grid>\n                 \n                  <Grid item xs={12}> \n                    <Button>\n                      Yeni Müşteri Oluştur\n                    </Button>\n                  </Grid>\n  \n  \n  \n                </Grid>\n  \n              </Form>\n            </Formik>\n  \n          </div>\n        </Container>\n      </Grid>\n    </Grid>\n     )\n   }else{\n    return (\n      <Grid container marginTop={2}>\n    \n    <Grid item xs={12}>\n      <Container>\n        <div >\n          <Formik\n          initialValues ={{\n            ...INITIAL_FORM_STATE,\n            firmaUlke:'Turkey'\n\n          }}\n          validationSchema ={FORM_VALIDATION}\n          onSubmit={ (values ,{ resetForm}) =>{\n            \n            Axios.post(\"\"+process.env.REACT_APP_URL+\"/api/insert/musteri\",{values}).then(()=>{\n              alert('succesfull insert');\n              \n            });\n            resetForm();\n            navigate('/musteriler')\n            \n          }}\n          >\n            <Form>\n              <Grid container spacing={2}>\n               \n                <Grid item xs={12} >\n                  <Typography>Müşteri Bilgileri</Typography>\n                </Grid>\n\n                  <Grid item xs={6}> \n                <Textfield \n                  name= \"firmaAdi\"\n                  label=\"Müşteri Ünvanı\"\n                  />\n                </Grid>\n                \n                <Grid item xs={6}> \n                <Textfield \n                  name= \"firmaIlgilisi\"\n                  label=\"Müşteri İlgili Kişisi Adı\"\n                  />\n                </Grid>\n                <Grid item xs={6}> \n                  <Select\n                    name='musteriRisk'\n                    label='Müşteri Risk Seviyesi'\n                    options={riskseviyesi} \n                    />\n                </Grid>\n                <Grid item xs={6}> \n                <Select\n                  name= \"firmaAractipi\"\n                  label=\"Müşteri Araç Tipi\"\n                  options={trailers}\n                  />\n                </Grid>\n\n                <Grid item xs={4}> \n                <Textfield \n                  name= \"firmaMail\"\n                  label=\"Müşteri E-Mail Adresi\"\n                  />\n                </Grid>\n                \n                <Grid item xs={4}> \n                <Textfield \n                  name= \"firmaTelefon\"\n                  label=\"Müşteri Telefon Numarası\"\n                  />\n                </Grid>\n                <Grid item xs={4}> \n                <Select\n                  name= \"firmaSehir\"\n                  label=\"Müşteri Şehir\"\n                  options={city}\n                  />\n                </Grid>\n                <Grid item xs={12}> \n                <Textfield \n                  name= \"firmaAdresi\"\n                  label=\"Müşteri Adresi\"\n                  multiline\n                  rows={3}\n                  />\n                </Grid>\n               \n                <Grid item xs={12}> \n                  <Button>\n                    Yeni Müşteri Oluştur\n                  </Button>\n                </Grid>\n\n\n\n              </Grid>\n\n            </Form>\n          </Formik>\n\n        </div>\n      </Container>\n    </Grid>\n  </Grid>\n  )\n   }\n    \n};\n\n\n\n\n","import React,{useState , useEffect} from 'react';\nimport { Grid , Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport {Formik , Form} from 'formik';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Button from '../Models/UIWrappers/Button';\n\n\n\n\nAxios.defaults.withCredentials = true;\n   \n\n\nexport default function Customers() {\n    const [musteriler , setMusteriler] = useState([]);\n    const apiPath  = ''+process.env.REACT_APP_URL+'/api/get';\n    const INITIAL_FORM_STATE = {\n        searchValue:'',\n    };\n\n\n  \n    \n    \n\n    useEffect(()=>{    \n        Axios.get(apiPath).then((response)=>{\n          setMusteriler(response.data);\n        })\n      },[]);\n    \n    return (\n        \n            \n        <div>\n            <div className='searchBar'>\n            <Formik\n            initialValues ={{\n              ...INITIAL_FORM_STATE\n            }}\n            \n            onSubmit={ (values) =>{\n              Axios.get(\"\"+process.env.REACT_APP_URL+\"/api/get/firmaAdi/\"+values.searchValue).then((response)=>{\n                setMusteriler(response.data);\n              })\n            }}\n            >\n                    <Form>\n                        <Grid container\n                        marginTop={1}\n                        spacing={2}\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        >\n                            \n                            <Grid item xs={8}>\n                            <Textfield\n                            name= \"searchValue\"\n                            label=\"Firma Adi giriniz\"/>\n                            </Grid>\n\n                            <Grid item xs={4}>\n                                <Button>\n                                    ARA\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Form>\n                </Formik>\n\n            </div>\n\n            {musteriler.map(musteri => {\n                return (\n                    \n                    <Grid  container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    >\n                        \n                        <Grid item xs={12}>\n                        <Link \n                            to={`/musteriler/${musteri.id}`}\n                            key={musteri.id}\n                            className ='musteri-bar'>\n                        <div className='musteri-inside'>\n                        <Typography>Firma:</Typography>\n                        <h3 className='musteri-h3'>{musteri.firmaAdi}</h3> \n                        <Typography>Şehir:</Typography>\n                        <h3 className='musteri-h3'>{musteri.firmaSehir}</h3>\n                        <Typography>Araç Tipi:</Typography>\n                        <h3 className='musteri-h3'>{musteri.firmaAractipi}</h3> \n                        <Typography>Risk Derecesi:</Typography>\n                        <h3 className='musteri-h3'>{musteri.musteriRisk}</h3> \n                      \n                        \n                        </div>\n                        </Link>\n                        </Grid>\n                        \n\n                    </Grid>\n                   \n                )\n            })}\n        </div>\n    )\n}\n","import React ,{useState , useEffect} from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom'\nimport Axios from 'axios';\nimport { Paper } from '@mui/material';\n\nAxios.defaults.withCredentials = true;\n\n\nexport default function CustomerPage() {\n\n\n    const [musteri , setMusteri] = useState([]);\n    const [gorusme , setGorusme] = useState([]);\n    const [teklifler , setTeklifler] = useState([]);\n\n    let params = useParams();\n    \n    function getDate(gorusmeDa) {\n         let date = new Date(gorusmeDa);\n         let year = date.getFullYear();\n         let month = date.getMonth()+1;\n         let dt = date.getDate();\n\n          if (dt < 10) {\n          dt = '0' + dt;\n          }\n          if (month < 10) {\n           month = '0' + month;\n          }       \n\n          return (dt+' ' + month + ' '+year);\n    }\n    \n    useEffect(()=>{\n        Axios.get(''+process.env.REACT_APP_URL+'/api/musteriler/'+params.id+'').then((response)=>{\n          setMusteri(response.data);\n          \n        })\n        Axios.get(''+process.env.REACT_APP_URL+'/api/get/gorusme/'+params.id+'').then((response)=>{\n          setGorusme(response.data);\n          \n        })\n        Axios.get(''+process.env.REACT_APP_URL+'/api/get/teklif/'+params.id+'').then((response)=>{\n          setTeklifler(response.data);\n          \n        })\n        \n\n      },[]);\n    \n      \n    return (\n        <div>\n          \n            \n           {musteri.map(a => {\n              \n               return (\n                <Grid container\n                marginTop={1}\n                spacing={1}\n                direction=\"row\">\n                   \n                 <Grid container justifyContent = 'end' marginBottom ={1}>\n                   <Grid item>\n                      <Link className='musteri-link' to ={'/musteriler/duzenle/'+params.id}>\n                        Müşteri Düzenle\n                      </Link>\n                   </Grid>\n                </Grid> \n\n\n                 <Grid item xs={12} md={6} lg={4}>\n                   <Paper elevation={2} variant='outlined'>\n                      <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri\n                    </Typography>\n                          {a.firmaAdi}\n                      </Typography>\n                   </Paper>\n                 </Grid>\n                 <Grid item xs={12} md={6} lg={4}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri İlgili Kişisi\n                    </Typography>\n                          {a.firmaIlgilisi}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={4}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri Risk\n                    </Typography>\n                          {a.musteriRisk}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Telefon Numarası\n                    </Typography>\n                          {a.firmaTelefon}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  \n                  <Grid item xs={12} md={6}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri Mail Adresi\n                    </Typography>\n                          {a.firmaMail}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri Adresi\n                    </Typography>\n                          {a.firmaAdresi}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri Şehir\n                    </Typography>\n                          {a.firmaSehir}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri Ülke\n                    </Typography>\n                          {a.firmaUlke}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri Araç Tipi\n                    </Typography>\n                          {a.firmaAractipi}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                 \n                  <Grid item xs={12} md={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                  TEMSİLCİMİZ\n                  </Typography>\n                  <Typography align='center' variant='h4'>\n                   {a.temsilciAdi}\n                  </Typography>\n                   </Paper>\n                  </Grid>\n\n               </Grid>\n               )\n           })}\n           <Grid container\n                marginTop={1}\n                spacing={1}\n                direction=\"row\">\n               \n               </Grid>\n              <Grid container\n                marginTop={1}\n                spacing={1}\n                direction=\"row\">\n               <Grid item xs={12} md={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                  YAPILAN GÖRÜŞMELER\n                  </Typography>\n                 </Paper>\n                 </Grid>\n                 <Grid item xs={12}> \n                  <Link className='musteri-link' to={'/musteriler/yeni-gorusme/'+params.id+''}> Yeni Görüşme Ekle</Link>\n                  </Grid>\n\n                 {gorusme.map(gorusme => {\n                return (\n                    \n                  <Grid  container\n                  direction=\"row\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  spacing={2}\n                  >\n                      \n                      <Grid item xs={12}>\n                      \n                      <Link\n                       className='musteri-bar' \n                       to={'/musteri/gorusme/'+gorusme.id}\n                      >\n                      <div className='musteri-inside'>\n                      <Typography>Görüşme Tarihi:</Typography>\n                      <h3 className='musteri-h3'>{getDate(gorusme.tarih)}</h3> \n                      <Typography>Görüşme Araç Tipi:</Typography>\n                      <h3 className='musteri-h3'>{gorusme.aracTipi}</h3> \n                      <Typography>Görüşme Konusu:</Typography>\n                      <h3 className='musteri-h3'>{gorusme.konusu}</h3>\n                      <Typography>Görüşen Kişi:</Typography>\n                      <h3 className='musteri-h3'>{gorusme.temsilciAdi}</h3> \n                    \n                      </div>\n                      \n                     </Link>\n                    </Grid>\n                      \n\n                  </Grid>\n                    )\n                  })}\n                  \n               </Grid>\n\n               \n               <Grid container\n                marginTop={1}\n                spacing={1}\n                direction=\"row\">\n              \n               <Grid item xs={12} md={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                  TEKLİFLER \n                  \n                  </Typography> \n                   </Paper>\n\n                  </Grid>\n                  <Grid item xs={12}> \n                  <Link className='musteri-link' to={'/musteriler/yeni-teklif/'+params.id+''}> Yeni Teklif Ekle</Link>\n                  </Grid>\n                  {teklifler.map(teklif => {\n                return (\n                    \n                    <Grid  container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    spacing={2}\n                    >\n                        \n                        <Grid item xs={12}>\n                        \n                        <Link\n                         className='musteri-bar' \n                         to={'/musteri/teklif/'+teklif.id}\n                        >\n                        <div className='musteri-inside'>\n                        <Typography>Teklif Tarihi:</Typography>\n                        <h3 className='musteri-h3'>{getDate(teklif.teklifTarih)}</h3> \n                        <Typography>Teklif Durumu:</Typography>\n                        <h3 className='musteri-h3'>{teklif.durum}</h3> \n                        <Typography>Teklif Araç Tipi:</Typography>\n                        <h3 className='musteri-h3'>{teklif.aracTipi}</h3>\n                        <Typography>Teklif Birim Fiyatı:</Typography>\n                        <h3 className='musteri-h3'>{teklif.birimFiyati}</h3> \n                      \n                        </div>\n                        \n                       </Link>\n                      </Grid>\n                        \n\n                    </Grid>\n                    )\n                  })}\n               </Grid>\n        \n        </div>\n    )\n}\n","export const navItems = [\n    {\n      id: 1,\n      title: \"AnaSayfa\",\n      path: \"./\",\n      cName: \"nav-item\",\n    },\n    {\n      id: 2,\n      title: \"Müşteriler\",\n      path: \"./musteriler\",\n      cName: \"nav-item\",\n    },\n    {\n      id: 3,\n      title: \"Yeni Müşteri Ekle\",\n      path: \"./yeni-musteri\",\n      cName: \"nav-item\",\n    },\n    \n  ];\n  \n  \n  export const navItemsAdmin = [\n    {\n      id: 1,\n      title: \"AnaSayfa\",\n      path: \"./\",\n      cName: \"nav-item\",\n    },\n    {\n      id: 2,\n      title: \"Müşteriler\",\n      path: \"./musteriler\",\n      cName: \"nav-item\",\n    },\n    {\n      id: 3,\n      title: \"Yeni Müşteri Ekle\",\n      path: \"./yeni-musteri\",\n      cName: \"nav-item\",\n    },\n    {\n      id: 4,\n      title: \"Yeni Temsilci Ekle\",\n      path: \"./register\",\n      cName: \"nav-item\",\n    },\n    \n  ];\n  \n  ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as Icons from \"react-icons/io\";\nimport './header.css';\nimport { navItems  , navItemsAdmin} from './NavbarItems';\nimport Axios from 'axios';\nimport {useNavigate} from 'react-router-dom';\nimport {useCustomer } from '/Volumes/Data/projeler/crm/client/src/Controllers/StoreSession'\nAxios.defaults.withCredentials = true;\n\n\n\n\nconst Header = () => {\n\n  const {customer , setCustomer } = useCustomer();\n  let navigate = useNavigate();\n\n      const handleClick = () => {\n      Axios.get(''+process.env.REACT_APP_URL+'/api/logout');\n      navigate('/');\n      setCustomer(null);\n      }\n\n  if(customer.isAdmin){\n    return(\n<>\n      <nav className='navbar'>\n        <Link\n          to='/'\n          className ='navbar-logo'\n        > SerinCRM\n        <Icons.IoIosBriefcase/>\n        </Link>\n        <ul className='nav-Items'>\n          {navItemsAdmin.map(item => {\n            return(\n            <li key={item.id} className ={item.cName}>\n              <Link to={item.path}>{item.title}</Link>\n            </li>\n            )\n          })}\n          <li className='logout'>\n              <button onClick = {handleClick\n                  \n              }> Çıkış </button>\n          </li>\n        </ul>\n\n\n      </nav>\n      \n    </>\n    )\n  }else{\n  return (\n    <>\n      <nav className='navbar'>\n        <Link\n          to='/'\n          className ='navbar-logo'\n        > SerinCRM\n        <Icons.IoIosBriefcase/>\n        </Link>\n        <ul className='nav-Items'>\n          {navItems.map(item => {\n            return(\n            <li key={item.id} className ={item.cName}>\n              <Link to={item.path}>{item.title}</Link>\n            </li>\n            )\n          })}\n          <li className='logout'>\n              <button onClick = {handleClick\n                  \n              }> Çıkış </button>\n          </li>\n        </ul>\n\n\n      </nav>\n      \n    </>\n  );\n}\n};\n\nexport default Header;","import React ,{useState , useEffect} from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { useParams } from 'react-router';\nimport Axios from 'axios';\nimport { Paper } from '@mui/material';\nimport { Link } from 'react-router-dom'\n\n\nAxios.defaults.withCredentials = true;\n\nexport default function PropositionPage() {\n\n    const [musteri , setMusteri] = useState([]);\n    \n\n    let params = useParams();\n  \n    function getDate(gorusmeDa) {\n         let date = new Date(gorusmeDa);\n         let year = date.getFullYear();\n         let month = date.getMonth()+1;\n         let dt = date.getDate();\n\n          if (dt < 10) {\n          dt = '0' + dt;\n          }\n          if (month < 10) {\n           month = '0' + month;\n          }       \n\n          return (dt+' ' + month + ' '+year);\n    }\n    \n    useEffect(()=>{\n        Axios.get(''+process.env.REACT_APP_URL+'/api/get/tekteklif/'+params.id+'').then((response)=>{\n          setMusteri(response.data);\n          \n        })\n       \n\n      },[]);\n    \n  \n    return (\n        <div>\n          \n            \n           {musteri.map(a => {\n              \n               return (\n                <Grid container\n                marginTop={2}\n                spacing={2}\n                direction=\"row\"\n                wrap>\n                  <Grid container \n                  marginLeft={2}>\n\n                  \n                  <Grid item xs={2}>\n                  <Link to={'/musteriler/'+a.musteriID}>\n                      Müşteriye Dön\n                  </Link>\n                  </Grid>\n                  </Grid>\n                  \n                 <Grid item xs={12} md={6} lg={3}>\n                   <Paper elevation={2} variant='outlined'>\n                      <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Araç Tipi\n                    </Typography>\n                          {a.aracTipi}\n                      </Typography>\n                   </Paper>\n                 </Grid>\n                 <Grid item xs={12} md={6} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Araç Adeti\n                    </Typography>\n                          {a.adet}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Birim Fiyat\n                    </Typography>\n                          {a.birimFiyati}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Para Birimi\n                    </Typography>\n                          {a.paraBirimi}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6} md={4} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Peşinat Miktarı\n                    </Typography>\n                          {a.pesinatMiktari}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6} md={4} lg={3}>\n                 <Paper variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Ödeme Şekli\n                    </Typography>\n                          {a.odemeSekli}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6} md={4} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Vade Süresi\n                    </Typography>\n                          {a.vadeSure}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6} md={4} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Teslim Tarihi\n                    </Typography>\n                          {a.teslimTarihi}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  \n                  <Grid item xs={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Teklif Tarihi\n                    </Typography>\n                          {getDate(a.teklifTarih)}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Teklif Durumu\n                    </Typography>\n                          {a.durum}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                         Teklif Nedeni\n                    </Typography>\n                          {a.neden}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Teklif Notu\n                    </Typography>\n                          {a.teklifNotu}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                 \n                  \n\n               </Grid>\n               )\n           })}\n           </div>\n    )\n}","import React from 'react';\nimport {TextField} from '@mui/material';\nimport { useField } from 'formik';\n\n\nconst DateTimePicker = ({\n    name,\n    ...otherProps\n}) => {\n    const [field , meta] = useField(name);\n\n    const configDateTimePicker = {\n        ...field,\n        ...otherProps,\n        type: 'date',\n        variant: 'outlined',\n        fullWidth: true,\n        InputLabelProps: {\n            shrink: true\n        }\n    };\n\n    if (meta && meta.touched && meta.error) {\n        configDateTimePicker.error = true;\n        configDateTimePicker.helperText = meta.error;\n    }\n\n\n    return (\n        <TextField\n            {...configDateTimePicker}  \n        />\n    );\n};\n\nexport default DateTimePicker;","import React from 'react'\nimport { Formik , Form } from 'formik';\nimport * as Yup from 'yup'; \nimport {\n  Grid , Container\n  \n} from '@mui/material';\nimport Axios from 'axios';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Select from '../Models/UIWrappers/Select';\nimport Button from '../Models/UIWrappers/Button';\nimport trailers from '../Models/Data/trailers.json';\nimport durum from '../Models/Data/durum.json'\nimport paracins from '../Models/Data/döviz.json'\nimport { useParams } from 'react-router';\nimport DateTimePicker from '../Models/UIWrappers/DateTimePicker';\nimport {useCustomer} from '../Controllers/StoreSession'\nAxios.defaults.withCredentials = true;\n\n\n\nexport default function CreatePropositionPage() {\n    const { customer } = useCustomer();\n    const INITIAL_FORM_STATE ={\n\n        paraBirimi: '',\n        odemeSekli: '',\n        pesinatMiktari:'',\n        vadeSure:'',\n        teslimTarihi:'',\n        teslimYeri:'',\n        durum:'',\n        neden:'',\n        not:'',\n        birimFiyati:0,\n        adet:0,\n        aracTipi:'',\n        teklifTarih:'',\n        temsilciID:customer.id\n        \n    \n    }\n    \n    const FORM_VALIDATION = Yup.object().shape({\n        paraBirimi: Yup.string()\n        .required('Lütfen Para Birimi Giriniz'),\n        odemeSekli: Yup.string()\n        .required('Ödeme Şeklini giriniz'),\n        pesinatMiktari: Yup.string()\n        .required('Peşinat Miktarını giriniz. Tamamen ödendiyse hepsini yazınız.'),\n        vadeSure: Yup.string()\n        .required('Lütfen vade süresini yazınız'),\n        teslimTarihi: Yup.string()\n        .required('Ürünün teslim edileceği süreyi yazınız.'),\n        teslimYeri:Yup.string(),\n        durum: Yup.string()\n        .required('Teklif durumunu seçiniz.'),\n        neden: Yup.string(),\n        not: Yup.string(),\n        birimFiyati: Yup.number()\n        .required('Birim fiyatını Sayı olarak giriniz!'),\n        adet: Yup.number()\n        .required('Adet sayısını sayı olarak giriniz!'),\n        aracTipi: Yup.string()\n        .required('Araç Tipini Seçiniz!'),\n        teklifTarih: Yup.date()\n        .required('Tarihi giriniz.')\n    \n    \n    })\n\n\n    \n    \n    let params = useParams();\n    \n    \n    return (\n        <Grid container marginTop={1} spacing={1}\n        direction=\"row\">\n            <Container>\n            <Formik\n            initialValues ={{\n                ...INITIAL_FORM_STATE,\n                musteriID: params.musteriID,\n                temsilciAdi:customer.adi\n              }}\n              validationSchema ={FORM_VALIDATION}\n              onSubmit={ (values ,{ resetForm}) =>{\n                \n                Axios.post(\"\"+process.env.REACT_APP_URL+\"/api/insert/teklif\",{values}).then(()=>{\n                  alert('succesfull insert');\n                  \n                });\n                resetForm();\n                \n              }}\n            >\n                <Form>\n                    <Grid container marginTop= {1} spacing ={1}>\n                \n                    <Grid item xs={12}>\n                        <DateTimePicker\n                        name='teklifTarih'\n                        label='Teklif verdiğiniz tarihi giriniz'/>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Select \n                        name='aracTipi'\n                        label='Araç Türünü Seçiniz'\n                        options={trailers}\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='adet'\n                        label='Adet belirtiniz'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='birimFiyati'\n                        label='Birim Fiyatını giriniz!'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Select \n                        name='paraBirimi'\n                        label='Para birimini Seçiniz!'\n                        options={paracins}\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='pesinatMiktari'\n                        label='Peşinat'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='vadeSure'\n                        label='Vade Süresi'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Textfield \n                        name='odemeSekli'\n                        label='Müşteri Ödeme Şekli'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='teslimTarihi'\n                        label='Teslimat  Tarihi/Süresi'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='teslimYeri'\n                        label='Teslimat Yeri'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Select \n                        name='durum'\n                        label='Teklif Durumu'\n                        options={durum}\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='neden'\n                        label='Eğer Teklif Red edilirse'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} >\n                        <Textfield \n                        multiline ={true}\n                        rows={4}\n                        name='not'\n                        label='Eklemek istediğiniz bir şey var ise Buraya yazabilirsiniz.'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12}> \n                    <Button>\n                      Yeni Teklif Ekle\n                    </Button>\n                  </Grid>\n                  </Grid>\n                </Form>\n            </Formik>\n            </Container>\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { Formik , Form } from 'formik';\nimport {\n  Grid , Container\n  \n} from '@mui/material';\nimport Axios from 'axios';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Button from '../Models/UIWrappers/Button';\nimport { useCustomer } from \"../Controllers/StoreSession\";\nimport { useNavigate } from 'react-router-dom';\n\n\n\n\n\nconst instance = Axios.create({\n    withCredentials: true,\n  })\nconst INITIAL_FORM_STATE ={\n    username: '',\n    password:'',\n};\n\nexport default function LoginPage() {\n    let navigate = useNavigate();\n\n\n\n    const { setCustomer } = useCustomer();\n    return (\n        <Grid container\n\n                direction='column'\n                justifyContent ='flex-end'\n                alignItems = 'center'\n                \n                margin = {5}\n               \n                \n        >\n            <Container >\n            <Formik initialValues ={{\n                ...INITIAL_FORM_STATE,\n\n              }}\n             \n              onSubmit={ (values) =>{\n                instance.post(\"\"+process.env.REACT_APP_URL+\"/api/login\",{values}).then((response)=>{\n                    setCustomer(response.data)\n                    navigate('/');\n                    \n                  });\n                  instance.post(''+process.env.REACT_APP_URL+'/api/currentUser').then((response) =>{\n        \n                    setCustomer(response.data)\n                })\n                \n                \n              }}>\n                <Form>\n                    <Grid container direction = 'column' spacing = {2} >\n                    <Grid item xs={8}>\n                        <Textfield\n                        name='username'\n                        label='Kullanıcı Adı\n                        '/>\n                    </Grid>\n                   \n                    <Grid item xs={8}>\n                    <Textfield\n                        name='password'\n                        label='Şifre'\n                        type='password'\n                        />\n                    </Grid>\n                    \n                    <Grid item xs={6}>\n                        <Button>\n                            Giriş\n                        </Button>\n                    </Grid>\n                   </Grid>\n                </Form>\n            </Formik>\n           \n            </Container>\n        </Grid>\n    )\n}\n","import React  from 'react'\nimport { Formik , Form } from 'formik';\nimport * as Yup from 'yup'; \nimport {\n  Container,\n  Grid,\n  Typography\n} from '@mui/material';\nimport Axios from 'axios';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Button from '../Models/UIWrappers/Button';\nimport DateTimePicker from '../Models/UIWrappers/DateTimePicker';\nimport { useCustomer } from '../Controllers/StoreSession';\nimport { useParams } from 'react-router';\n\n\n\n\nAxios.defaults.withCredentials = true;\n\n\nexport default function CreateMeeting() {\n    let params = useParams();\n    const {customer} = useCustomer();\n\n    const INITIAL_FORM_STATE ={\n\n        gorusmeKonusu:'',\n        gorusmeOzeti:'',\n        gorusmeTarihi:'',\n        gorusmeYeri:'',\n        aractipi:'',\n        musteriID:params.musteriID,\n        temsilciID:customer.id,\n        temsilciAdi:customer.adi,\n\n      };\n      \n      \n      const FORM_VALIDATION = Yup.object().shape({\n          gorusmeKonusu: Yup.string()\n          .required('Müşteri Ünvanını giriniz!'),\n      \n          gorusmeOzeti: Yup.string()\n          .required('Müşteri Adresini giriniz'),\n      \n          gorusmeYeri: Yup.string()\n          .required('Görüşme Yerini giriniz!'),\n      \n          gorusmeTarihi: Yup.date()\n          .required('Lütfen doldurunuz.'),\n          aractipi: Yup.string()\n          .required('Araç Tipini giriniz.'),\n      });\n      \n\n\n\n\n\n\n\n    return (\n        <Grid container marginTop={2}>\n      \n      <Grid item xs={12}>\n        <Container>\n          <div >\n            <Formik\n            initialValues ={{\n              ...INITIAL_FORM_STATE\n            }}\n            validationSchema ={FORM_VALIDATION}\n            onSubmit={ (values ,{ resetForm}) =>{\n              \n              Axios.post(\"\"+process.env.REACT_APP_URL+\"/api/insert/gorusme\",{values}).then(()=>{\n                alert('succesfull insert');\n                \n              });\n              resetForm();\n              \n            }}\n            >\n              <Form>\n                <Grid container spacing={2}>\n                 \n                  <Grid item xs={12}  >\n                    <Typography>Görüşme Bilgileri</Typography>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={6} >\n\n                    <Textfield\n                    name='gorusmeYeri'\n                    label='Görüşme Yeri'\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6} lg={6} >\n\n                  <DateTimePicker \n                    name= \"gorusmeTarihi\"\n                    label=\"Görüşme Tarihi\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6} lg={6} >\n\n                  <Textfield \n                    name= \"gorusmeKonusu\"\n                    label=\"Görüşme Konusu\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={6} >\n\n                  <Textfield \n                    name= \"aractipi\"\n                    label=\"Araç Tipi\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}> \n                  <Textfield\n                    name= \"gorusmeOzeti\"\n                    label=\"Görüşme Özeti\"\n                    multiline\n                    rows={3}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}> \n                    <Button>\n                      Yeni Görüşme Ekle\n                    </Button>\n                  </Grid>\n\n\n\n                </Grid>\n\n              </Form>\n            </Formik>\n\n          </div>\n        </Container>\n      </Grid>\n    </Grid>\n    )\n};\n\n\n\n\n","import React from 'react'\nimport { Formik , Form } from 'formik';\nimport {\n  Grid , Container\n  \n} from '@mui/material';\nimport Axios from 'axios';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Button from '../Models/UIWrappers/Button';\nimport Select from '../Models/UIWrappers/Select';\nimport departmans from '../Models/Data/departman.json';\nAxios.defaults.withCredentials = true;\n\nconst INITIAL_FORM_STATE ={\n    username:'',\n    mail: '',\n    password:'',\n    adi:'',\n    departman:'',\n    soyadi:''\n};\n\n\nexport default function CreateUser() {\n    return (\n       \n        <Grid container\n            margin = {5}  \n            \n\n        >   \n            <Grid item xs={12}>\n        <Container>\n            <Formik initialValues ={{\n                ...INITIAL_FORM_STATE,\n\n              }}\n             \n              onSubmit={ (values) =>{\n                \n                Axios.post(\"\"+process.env.REACT_APP_URL+\"/api/register\",{values}).then((response)=>{\n                  \n                });\n                \n              }}>\n                <Form>\n                    <Grid container spacing = {2}>\n                        <Grid item xs={6}>\n                            <Textfield\n                            name='adi'\n                            label='Temsilci Adı \n                            '/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Textfield\n                            name='soyadi'\n                            label='Temsilci  Soyadı\n                            '/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Textfield\n                            name='mail'\n                            label='Temsilci Mail Adresi\n                            '/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Select\n                            name='departman'\n                            label='Departman'\n                            options={departmans}\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Textfield\n                            name='username'\n                            label='Kullanıcı Adı'\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Textfield\n                            name='password'\n                            label='Şifre'\n                            />\n                        </Grid>\n                    <Grid item xs={12}>\n                        <Button>\n                            Temsilci Hesabı oluştur.\n                        </Button>\n                    </Grid>\n                  </Grid>\n                </Form>\n             </Formik>\n            </Container>\n        </Grid>\n     </Grid>\n    )\n}\n","import React , { useEffect , useState}from 'react';\nimport Axios from 'axios';\nimport {Grid, Paper, Typography} from '@mui/material'\nimport { Link } from 'react-router-dom';\n\n\nAxios.defaults.withCredentials = true;\n\nexport default function HomePageGorusme() {\n    function getDate(gorusmeDa) {\n        let date = new Date(gorusmeDa);\n        let year = date.getFullYear();\n        let month = date.getMonth()+1;\n        let dt = date.getDate();\n\n         if (dt < 10) {\n         dt = '0' + dt;\n         }\n         if (month < 10) {\n          month = '0' + month;\n         }       \n\n         return (dt+'.' + month + '.'+year);\n\n   }\n\n    const [gorusmeler , setGorusmeler] = useState([{}]);\n    useEffect(()=>{\n        \n        \n\n        \n        Axios.get(''+process.env.REACT_APP_URL+'/api/get/gorusmeler').then((response)=>{\n          setGorusmeler(response.data);\n          \n          \n        })\n      },[]);\n    return (\n       <Grid container\n       direction='column' \n       marginLeft = {1}\n       >\n        \n           <Paper>\n\n           {gorusmeler.map( a => {\n               \n               return(\n            <Grid item xs={12} margin={1} padding={1}> \n            <Paper>  \n            <Link className='homepageStacks' to={'/musteri/gorusme/'+a.id}>\n            <Typography>\n                {a.temsilciAdi}  , {a.aracTipi} için {getDate(a.tarih)} tarihinde bir görüşme yaptı.\n            </Typography>\n\n            </Link>\n            </Paper>\n            </Grid>\n               \n               )\n\n           })\n\n           }\n           \n           </Paper>\n       </Grid>\n    )\n}\n","import React , { useEffect , useState}from 'react';\nimport Axios from 'axios';\nimport {Grid, Paper, Typography} from '@mui/material'\nimport { Link } from 'react-router-dom';\n\n\nAxios.defaults.withCredentials = true;\n\nexport default function HomePageTeklifler() {\n    function getDate(gorusmeDa) {\n        let date = new Date(gorusmeDa);\n        let year = date.getFullYear();\n        let month = date.getMonth()+1;\n        let dt = date.getDate();\n\n         if (dt < 10) {\n         dt = '0' + dt;\n         }\n         if (month < 10) {\n          month = '0' + month;\n         }       \n\n         return (dt+'.' + month + '.'+year);\n\n   }\n\n    const [teklifler , setTeklifler] = useState([{}]);\n    useEffect(()=>{\n        \n        \n\n        \n        Axios.get(''+process.env.REACT_APP_URL+'/api/get/teklifler').then((response)=>{\n          setTeklifler(response.data);\n          \n          \n        })\n      },[]);\n    return (\n       <Grid container\n       direction='column'\n       \n       marginLeft = {1}\n       >\n        \n           <Paper>\n\n           {teklifler.map( a => {\n              \n               return(\n            <Grid item xs={12} margin={1} padding={1}> \n            <Paper>  \n            <Link className='homepageStacks' to={'/musteri/teklif/'+a.id}>\n            <Typography>\n                {a.temsilciAdi}  ,  {getDate(a.teklifTarih)}  tarihinde  {a.aracTipi} için durumu {a.durum} olan bir teklif yükledi. \n            </Typography>\n\n            </Link>\n            </Paper>\n            </Grid>\n               \n               )\n\n           })\n\n           }\n           \n           </Paper>\n       </Grid>\n    )\n}\n","import React , { useEffect , useState}from 'react';\nimport Axios from 'axios';\nimport {Grid, Paper, Typography} from '@mui/material'\nimport { Link } from 'react-router-dom';\n\n\nAxios.defaults.withCredentials = true;\n\nexport default function HomePageTamamlanmamışTeklifler() {\n    function getDate(gorusmeDa) {\n        let date = new Date(gorusmeDa);\n        let year = date.getFullYear();\n        let month = date.getMonth()+1;\n        let dt = date.getDate();\n\n         if (dt < 10) {\n         dt = '0' + dt;\n         }\n         if (month < 10) {\n          month = '0' + month;\n         }       \n\n         return (dt+'.' + month + '.'+year);\n\n   }\n\n    const [redTeklifler , setRedTeklifler] = useState([{}]);\n    useEffect(()=>{\n        \n        \n\n        \n        Axios.get(''+process.env.REACT_APP_URL+'/api/get/teklifRed').then((response)=>{\n          setRedTeklifler(response.data);\n          \n          \n        })\n      },[]);\n    return (\n       <Grid container\n       direction='column' \n       marginLeft = {1}\n       >\n        \n           <Paper>\n\n           {redTeklifler.map( a => {\n               \n               return(\n            <Grid item xs={12} margin={1} padding={1}> \n            <Paper>  \n            <Link className='homepageStacks' to={'/musteri/teklif/'+a.id}>\n            <Typography>\n                {a.temsilciAdi}  | {a.aracTipi} |  {a.durum} | {a.neden}  | {getDate(a.teklifTarih)}\n            </Typography>\n\n            </Link>\n            </Paper>\n            </Grid>\n               \n               )\n\n           })\n\n           }\n           \n           </Paper>\n       </Grid>\n    )\n}\n","import {Grid, Typography } from '@mui/material';\nimport React , { useEffect } from 'react'\nimport {useCustomer} from '../Controllers/StoreSession'\nimport Gorusmeler from '../Models/UIWrappers/HomepageGorusmeler/index'\nimport Teklifler from '../Models/UIWrappers/HomepageTeklifler/index'\nimport RedTeklifler from '../Models/UIWrappers/HomepageTamamlanmamış/index'\nimport  Axios  from 'axios';\nAxios.defaults.withCredentials = true;\n\n\nexport default function HomePage() {\n    const { customer , setCustomer } = useCustomer();\n    let kullaniciAdi = customer.adi;\n    useEffect(()=>{\n        \n        Axios.post(''+process.env.REACT_APP_URL+'/api/currentUser').then((response) =>{\n        \n                    setCustomer(response.data)\n                })\n                \n        \n      },[]);\n    \n    \n    return (\n        <div>\n            <h1>Hoşgeldin {kullaniciAdi}</h1>\n            <Grid container\n            wrap\n            spacing={2}>\n                \n            <Grid item xs={6}>\n                <Typography> Son Görüşmeler </Typography>\n                <Gorusmeler/>\n            </Grid>\n            <Grid item xs={6}>\n            <Typography>Son Yapılan Teklifler</Typography>\n                <Teklifler/>\n            </Grid>\n            <Grid item xs={12}>\n            <Typography> Tamamlanmamış yada Red olan teklifler</Typography>\n                <RedTeklifler/>\n            </Grid>\n            </Grid>\n            \n        </div>\n    )\n}\n","import React ,{useState , useEffect} from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { useParams } from 'react-router';\nimport Axios from 'axios';\nimport { Paper } from '@mui/material';\nimport { Link } from 'react-router-dom'\n\n\nAxios.defaults.withCredentials = true;\n\nexport default function Meeting() {\n\n    const [gorusme , setGorusme] = useState([{}]);\n    \n\n    let params = useParams();\n  \n    function getDate(gorusmeDa) {\n         let date = new Date(gorusmeDa);\n         let year = date.getFullYear();\n         let month = date.getMonth()+1;\n         let dt = date.getDate();\n\n          if (dt < 10) {\n          dt = '0' + dt;\n          }\n          if (month < 10) {\n           month = '0' + month;\n          }       \n\n          return (dt+' ' + month + ' '+year);\n    }\n    \n    useEffect(()=>{\n        Axios.get(''+process.env.REACT_APP_URL+'/api/get/singleGorusme/'+params.id+'').then((response)=>{\n          setGorusme(response.data);\n          \n        })\n       \n\n      },[]);\n    \n  \n    return (\n        <div>\n          \n            \n           {gorusme.map(a => {\n              \n               return (\n                <Grid container\n                marginTop={2}\n                spacing={2}\n                direction=\"row\"\n                wrap>\n                  <Grid container \n                  marginLeft={2}>\n\n                  \n                  <Grid item xs={2}>\n                  <Link to={'/musteriler/'+a.musteriID}>\n                      Müşteriye Dön\n                  </Link>\n                  </Grid>\n                  </Grid>\n                  \n                 <Grid item xs={12} md={6} lg={6}>\n                   <Paper  variant='outlined'>\n                      <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Görüşme Yapan Kişi\n                    </Typography>\n                          {a.temsilciAdi}\n                      </Typography>\n                   </Paper>\n                 </Grid>\n                 <Grid item xs={12} md={6} lg={6}>\n                 <Paper  variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Görüşme Tarihi\n                    </Typography>\n                          {getDate(a.tarih)}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={6}>\n                 <Paper  variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                       Görüşme Konusu\n                    </Typography>\n                          {a.konusu}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={6}>\n                 <Paper  variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Görüşülen Araç Tipi\n                    </Typography>\n                          {a.aracTipi}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={12} lg={12}>\n                 <Paper  variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Görüşme Özeti\n                    </Typography>\n                          {a.ozet}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n               </Grid>\n               )\n           })}\n           </div>\n    )\n}","import React , { useEffect, useState }  from 'react'\nimport { Formik , Form } from 'formik';\nimport * as Yup from 'yup'; \nimport {\n  Container,\n  Grid,\n  Typography\n} from '@mui/material';\nimport Axios from 'axios';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Select from '../Models/UIWrappers/Select';\nimport Button from '../Models/UIWrappers/Button';\nimport countries from '../Models/Data/countries.json';\nimport city from '../Models/Data/turkey-city.json';\nimport trailers from '../Models/Data/trailers.json';\nimport { useNavigate } from 'react-router-dom';\nimport { useCustomer } from '../Controllers/StoreSession';\nimport { useParams } from 'react-router';\n\n\n\nAxios.defaults.withCredentials = true;\n\n\n\n\nexport default function EditCustomer() {\n    const [initvalues , setInıtvalues] = useState([]);\n    const {customer} = useCustomer();\n    const params = useParams();\n           \n\n    function  getData() {\n          Axios.get(process.env.REACT_APP_URL+'/api/musteriler/'+params.id).then((response)=>{\n          setInıtvalues(response.data);\n          \n        })\n    }\n\n\n\n    useEffect(()=>{ \n      getData();\n         \n      },[]);\n    \n  const FORM_VALIDATION = Yup.object().shape({\n      firmaAdi: Yup.string()\n      .required('Müşteri Ünvanını giriniz!'),\n  \n      firmaAdresi: Yup.string()\n      .required('Müşteri Adresini giriniz'),\n  \n      firmaMail: Yup.string()\n      .email('Mail adresi yanlış girildi')\n      .required('Lütfen müşteri mail adresini giriniz'),\n  \n      firmaIlgilisi: Yup.string()\n      .required('Lütfen doldurunuz.'),\n  \n      firmaTelefon: Yup.string().required('Lütfen telefon numarasını giriniz...'),\n  \n      firmaAractipi: Yup.string(),\n  \n      firmaSehir: Yup.string(),\n  \n      firmaUlke: Yup.string(),\n  });\n\n\n   let navigate = useNavigate();\n\n   return (\n      initvalues.map(a => {\n  const INITIAL_FORM_STATE = {\n    id: a.id,\n    firmaAdi: a.firmaAdi,\n    firmaSehir: a.firmaSehir,\n    firmaUlke: a.firmaUlke,\n    firmaMail: a.firmaMail,\n    firmaAractipi: a.firmaAractipi,\n    firmaIlgilisi: a.firmaIlgilisi,\n    firmaAdresi: a.firmaAdresi,\n    firmaTelefon: a.firmaTelefon,\n    musteriRisk : a.musteriRisk,\n    temsilciID: a.temsilciID || customer.id,\n    temsilciAdi: a.temsilciAdi || customer.adi\n  }\n  return(\n<Grid container marginTop={2}>\n  <Grid item xs={12}>\n    <Container>\n      <div>\n        <Formik\n          initialValues ={{\n            ...INITIAL_FORM_STATE\n          }}\n          validationSchema ={FORM_VALIDATION}\n          onSubmit={ (values ,{ resetForm}) =>{\n            Axios.post(\"\"+process.env.REACT_APP_URL+\"/api/update/musteri/\"+params.id,{values}).then(()=>{\n              alert('succesfull insert');\n            });\n              resetForm();\n              navigate('/musteriler/'+a.id) }}>\n                   <Form>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12} >\n                       <Typography>Müşteri Bilgileri</Typography>\n                    </Grid>\n                    <Grid item xs={4}> \n                      <Textfield \n                        name= \"firmaAdi\"\n                        label=\"Müşteri Ünvanı\"\n                        />\n                    </Grid>\n                    <Grid item xs={4}> \n                      <Textfield \n                        name= \"firmaIlgilisi\"\n                        label=\"Müşteri İlgili Kişisi Adı\"\n                        />\n                    </Grid>\n                    <Grid item xs={4}> \n                      <Select\n                        name= \"firmaAractipi\"\n                        label=\"Müşteri Araç Tipi\"\n                        options={trailers}\n                        />\n                    </Grid>\n                    <Grid item xs={6}> \n                      <Textfield \n                        name= \"firmaMail\"\n                        label=\"Müşteri E-Mail Adresi\"\n                        />\n                    </Grid>\n                    <Grid item xs={6}> \n                      <Textfield \n                        name= \"firmaTelefon\"\n                        label=\"Müşteri Telefon Numarası\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}> \n                      <Textfield \n                        name= \"firmaAdresi\"\n                        label=\"Müşteri Adresi\"\n                        />\n                    </Grid>\n                    <Grid item xs={6}> \n                      <Select\n                        name= \"firmaSehir\"\n                        label=\"Müşteri Şehir\"\n                        options={city}\n                        />\n                    </Grid>\n                    <Grid item xs={6}> \n                      <Select\n                        name='firmaUlke'\n                        label='Müşteri Ülkesi'\n                        options={countries} \n                        />\n                    </Grid>\n                    <Grid item xs={12}> \n                      <Button>\n                        Müşteri KAYDET\n                      </Button>\n                    </Grid>\n                </Grid>\n             </Form>\n         </Formik>\n      </div>\n    </Container>\n  </Grid>\n</Grid>\n )\n})\n)\n  \n};\n\n\n\n\n","import './App.css';\nimport { Routes, Route} from \"react-router-dom\";\nimport NewCustomerPage from './Views/NewCustomerPage';\nimport Customers from './Views/Customers';\nimport CustomerPage from './Views/CustomerPage';\nimport Header from './Models/UIWrappers/Header';\nimport PropositionPage from './Views/PropositionPage';\nimport CreatePropositionPage from './Views/CreatePropositionPage';\nimport LoginPage from './Views/LoginPage';\nimport CreateMeeting from './Views/CreateMeeting';\nimport CreateUser from './Views/CreateUser';\nimport Axios from 'axios';\nimport { useCustomer } from \"./Controllers/StoreSession\";\nimport HomePage from './Views/HomePage';\nimport Meeting from './Views/Meeting';\nimport EditCustomer from './Views/EditCustomer';\n\n\nAxios.defaults.withCredentials = true;\n\n\n\n\nfunction App() {\n\n\nconst { customer } = useCustomer();\n  if(customer) {\n    return (\n    <div>\n      <Header/>\n      <Routes>\n      <Route exact path=\"/\" element={<HomePage />}/>\n      <Route path=\"login\" element={<LoginPage />}/>\n      <Route path=\"register\" element={<CreateUser />}/>\n      <Route path=\"musteriler\" element={<Customers />}/>\n      <Route path=\"musteriler/yeni-teklif/:musteriID\" element={<CreatePropositionPage />}/>\n      <Route path=\"musteriler/yeni-gorusme/:musteriID\" element={<CreateMeeting />}/>\n      <Route path='musteriler/:id' element={<CustomerPage />} />\n      <Route path=\"yeni-musteri\" element={<NewCustomerPage />} />\n      <Route path=\"musteri/teklif/:id\" element={<PropositionPage />} />\n      <Route path=\"musteri/gorusme/:id\" element={<Meeting />} />\n      <Route path=\"musteriler/duzenle/:id\" element={<EditCustomer />} />\n      <Route path=\"musteriler/teklif/duzenle/:id\" element={<Meeting />} />\n      <Route path=\"musteriler/gorusme/duzenle/:id\" element={<Meeting />} />\n      </Routes>\n    </div>\n    )\n  }else{\n    return(\n      <LoginPage/>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { CustomerWrapper } from './Controllers/StoreSession'\n\n\n\nReactDOM.render(\n  <CustomerWrapper>\n  <BrowserRouter>\n   <App />\n  </BrowserRouter>\n  </CustomerWrapper>\n  ,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}