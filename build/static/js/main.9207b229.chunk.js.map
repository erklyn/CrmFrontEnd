{"version":3,"sources":["Models/UIWrappers/Textfield/index.js","Models/UIWrappers/Select/index.js","Models/UIWrappers/Button/index.js","Controllers/StoreSession.js","Views/NewCustomerPage.js","Views/Customers.js","Views/CustomerPage.js","Models/UIWrappers/Header/NavbarItems.js","Models/UIWrappers/Header/index.js","Views/PropositionPage.js","Models/UIWrappers/DateTimePicker/index.js","Views/CreatePropositionPage.js","Views/LoginPage.js","Views/CreateMeeting.js","Views/CreateUser.js","Models/UIWrappers/HomepageGorusmeler/index.js","Models/UIWrappers/HomepageTeklifler/index.js","Models/UIWrappers/HomepageTamamlanmamış/index.js","Views/HomePage.js","App.js","index.js"],"names":["TextFieldWrapper","name","otherProps","useField","field","meta","configTextField","fullWidth","variants","margin","touched","error","helperText","TextField","SelectWrapper","options","setFieldValue","useFormikContext","setValue","configSelect","select","variant","onChanged","evt","value","target","Object","keys","map","item","pos","MenuItem","ButtonWrapper","children","submitForm","configButton","color","onClick","Button","Axios","defaults","withCredentials","CustomerContext","createContext","useCustomer","useContext","CustomerWrapper","useState","customer","setCustomer","working","setWorking","refreshToken","a","post","then","response","data","useEffect","Provider","NewCustomerPage","console","log","id","INITIAL_FORM_STATE","firmaAdi","firmaAdresi","firmaMail","firmaSehir","firmaUlke","firmaAractipi","firmaIlgilisi","firmaTelefon","temsilciID","temsilciAdi","adi","FORM_VALIDATION","Yup","shape","required","email","navigate","useNavigate","Grid","container","marginTop","xs","Container","initialValues","validationSchema","onSubmit","values","resetForm","alert","spacing","Typography","Textfield","label","Select","trailers","city","countries","Customers","musteriler","setMusteriler","get","className","searchParameter","searchValue","direction","justifyContent","alignItems","searchparams","musteri","to","CustomerPage","setMusteri","gorusme","setGorusme","teklifler","setTeklifler","params","useParams","getDate","gorusmeDa","date","Date","year","getFullYear","month","getMonth","dt","md","lg","Paper","elevation","align","tarih","konusu","ozet","teklif","teklifTarih","durum","aracTipi","birimFiyati","navItems","title","path","cName","navItemsAdmin","Header","handleClick","isAdmin","PropositionPage","wrap","adet","paraBirimi","pesinatMiktari","odemeSekli","vadeSure","teslimTarihi","neden","teklifNotu","DateTimePicker","configDateTimePicker","type","InputLabelProps","shrink","CreatePropositionPage","teslimYeri","not","musteriID","paracins","multiline","rows","instance","create","username","password","LoginPage","CreateMeeting","gorusmeKonusu","gorusmeOzeti","gorusmeTarihi","gorusmeYeri","mail","departman","soyadi","CreateUser","departmans","HomePageGorusme","gorusmeler","setGorusmeler","marginLeft","padding","HomePageTeklifler","HomePageTamamlanmamışTeklifler","redTeklifler","setRedTeklifler","HomePage","kullaniciAdi","App","exact","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9207b229.chunk.js","sourcesContent":["import React from 'react';\nimport {TextField} from '@mui/material';\nimport {useField} from 'formik';\n\nconst TextFieldWrapper = ({\n    name,\n    ...otherProps\n}) => {\n    const [field ,meta] = useField(name);\n\n     const configTextField = {\n          ...field,\n          ...otherProps,\n          fullWidth: true,\n          variants: 'outlined' ,\n          margin: 'dense'\n        \n     };\n     if (meta && meta.touched && meta.error){\n         configTextField.error = true;\n         configTextField.helperText = meta.error;\n     } \n    \n    return (\n        <TextField {...configTextField}/>\n    );\n};\n\nexport default TextFieldWrapper","import React from 'react';\nimport {TextField , MenuItem} from '@mui/material';\nimport {useField , useFormikContext} from 'formik';\n\nconst SelectWrapper = ({\n    name,\n    options,\n    ...otherProps\n}) => {\n    const { setFieldValue } = useFormikContext();\n    const[field, meta] = useField(name);\n    const[value, setValue] = useField('');\n\n    const handleChange = evt => {\n        const { value } = evt.target;\n        setFieldValue(name , value);\n        setValue(value);\n    };\n\n    const configSelect ={\n        ...field,\n        ...otherProps,\n        select: true,\n        variant: 'outlined',\n        fullWidth: true,\n        onChanged: handleChange\n    }\n    if (meta && meta.touched && meta.error) {\n        configSelect.error = true;\n        configSelect.helperText = meta.error;\n    };\n    \n    return (\n        <TextField {...configSelect}> \n            {Object.keys(options).map((item, pos) => {\n                return (\n                    <MenuItem key={pos} value={item}>\n                        {options[item]}\n                    </MenuItem>\n                )\n            })}\n        </TextField>\n    );\n};\n\n\nexport default SelectWrapper;","import React from 'react';\nimport { Button} from '@mui/material';\nimport { useFormikContext } from 'formik';\n\n\nconst ButtonWrapper = ({\n    children,\n    ...otherProps\n}) => {\n    const { submitForm } = useFormikContext();\n\n    const handleSubmit =  () => {\n        submitForm();\n        \n    }\n\n    const configButton = {\n        variant:'contained',\n        color: 'primary',\n        fullWidth: true,\n        onClick: handleSubmit\n    }\n\n    return (\n        <Button\n        {...configButton}\n        >\n            {children}\n        </Button>\n    );\n};\n\nexport default ButtonWrapper;","import { useState, createContext, useContext, useEffect } from \"react\";\nimport Axios from 'axios';\nAxios.defaults.withCredentials = true;\n\n\n\nexport const CustomerContext = createContext([]);\n\nexport const useCustomer = () => useContext(CustomerContext);\n\nexport const CustomerWrapper = ({ children }) => {\n  const [customer, setCustomer] = useState(null);\n  const [working, setWorking] = useState(true);\n\n  const refreshToken = async () => {\n    await Axios.post('https://serin-crm.herokuapp.com/auth/currentUser').then((response) =>{\n        \n        setCustomer(response.data)\n    })\n    setWorking(false)\n        \n  };  \n      \n  \n\n  useEffect(() => {\n    refreshToken();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <CustomerContext.Provider value={{ customer , setCustomer }}>\n      {working ? null : children}\n    </CustomerContext.Provider>\n  );\n};","import React  from 'react'\nimport { Formik , Form } from 'formik';\nimport * as Yup from 'yup'; \nimport {\n  Container,\n  Grid,\n  Typography\n} from '@mui/material';\nimport Axios from 'axios';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Select from '../Models/UIWrappers/Select';\nimport Button from '../Models/UIWrappers/Button';\nimport countries from '../Models/Data/countries.json';\nimport city from '../Models/Data/turkey-city.json';\nimport trailers from '../Models/Data/trailers.json';\nimport { useNavigate } from 'react-router-dom';\nimport { useCustomer } from '../Controllers/StoreSession';\n\nAxios.defaults.withCredentials = true;\n\n\n\n\nexport default function NewCustomerPage() {\n\n  const {customer} = useCustomer();\n  console.log(customer.id)\n  const INITIAL_FORM_STATE ={\n    firmaAdi:'',\n    firmaAdresi:'',\n    firmaMail:'',\n    firmaSehir:'',\n    firmaUlke:'',\n    firmaAractipi:'',\n    firmaIlgilisi:'',\n    firmaTelefon:'',\n    temsilciID:customer.id,\n    temsilciAdi:customer.adi\n  };\n  \n  \n  const FORM_VALIDATION = Yup.object().shape({\n      firmaAdi: Yup.string()\n      .required('Müşteri Ünvanını giriniz!'),\n  \n      firmaAdresi: Yup.string()\n      .required('Müşteri Adresini giriniz'),\n  \n      firmaMail: Yup.string()\n      .email('Mail adresi yanlış girildi')\n      .required('Lütfen müşteri mail adresini giriniz'),\n  \n      firmaIlgilisi: Yup.string()\n      .required('Lütfen doldurunuz.'),\n  \n      firmaTelefon: Yup.string().required('Lütfen telefon numarasını giriniz...'),\n  \n      firmaAractipi: Yup.string(),\n  \n      firmaSehir: Yup.string(),\n  \n      firmaUlke: Yup.string(),\n  });\n\n\n\n\n\n\n\n\n   let navigate = useNavigate();\n    return (\n        <Grid container marginTop={2}>\n      \n      <Grid item xs={12}>\n        <Container>\n          <div >\n            <Formik\n            initialValues ={{\n              ...INITIAL_FORM_STATE\n            }}\n            validationSchema ={FORM_VALIDATION}\n            onSubmit={ (values ,{ resetForm}) =>{\n              \n              Axios.post(\"http://localhost:3001/api/insert/musteri\",{values}).then(()=>{\n                alert('succesfull insert');\n                \n              });\n              resetForm();\n              navigate('/musteriler')\n              \n            }}\n            >\n              <Form>\n                <Grid container spacing={2}>\n                 \n                  <Grid item xs={12} >\n                    <Typography>Müşteri Bilgileri</Typography>\n                  </Grid>\n\n                    <Grid item xs={4}> \n                  <Textfield \n                    name= \"firmaAdi\"\n                    label=\"Müşteri Ünvanı\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={4}> \n                  <Textfield \n                    name= \"firmaIlgilisi\"\n                    label=\"Müşteri İlgili Kişisi Adı\"\n                    />\n                  </Grid>\n                  <Grid item xs={4}> \n                  <Select\n                    name= \"firmaAractipi\"\n                    label=\"Müşteri Araç Tipi\"\n                    options={trailers}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}> \n                  <Textfield \n                    name= \"firmaMail\"\n                    label=\"Müşteri E-Mail Adresi\"\n                    />\n                  </Grid>\n                  \n                  <Grid item xs={6}> \n                  <Textfield \n                    name= \"firmaTelefon\"\n                    label=\"Müşteri Telefon Numarası\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}> \n                  <Textfield \n                    name= \"firmaAdresi\"\n                    label=\"Müşteri Adresi\"\n                    />\n                  </Grid>\n                  <Grid item xs={6}> \n                  <Select\n                    name= \"firmaSehir\"\n                    label=\"Müşteri Şehir\"\n                    options={city}\n                    />\n                  </Grid>\n                  <Grid item xs={6}> \n                    <Select\n                      name='firmaUlke'\n                      label='Müşteri Ülkesi'\n                      options={countries} \n                      />\n                  </Grid>\n                  <Grid item xs={12}> \n                    <Button>\n                      Yeni Müşteri Oluştur\n                    </Button>\n                  </Grid>\n\n\n\n                </Grid>\n\n              </Form>\n            </Formik>\n\n          </div>\n        </Container>\n      </Grid>\n    </Grid>\n    )\n};\n\n\n\n\n","import React,{useState , useEffect} from 'react';\nimport { Grid , Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport {Formik , Form} from 'formik';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Select from '../Models/UIWrappers/Select';\nimport Button from '../Models/UIWrappers/Button';\nimport searchparams from '../Models/Data/search-params.json';\n\n\n\nAxios.defaults.withCredentials = true;\n   \n\n\nexport default function Customers() {\n    \n\n    \n\n\n\n    const [musteriler , setMusteriler] = useState([]);\n    const apiPath  = 'https://serin-crm.herokuapp.com/api/get';\n    const INITIAL_FORM_STATE = {\n        searchParameter: '',\n        searchValue:'',\n    };\n\n\n  \n    \n    \n\n    useEffect(()=>{\n        \n        \n\n    \n        Axios.get(apiPath).then((response)=>{\n          setMusteriler(response.data);\n          \n          \n        })\n      },[]);\n    \n    return (\n        \n            \n        <div>\n            <div className='searchBar'>\n            <Formik\n            initialValues ={{\n              ...INITIAL_FORM_STATE\n            }}\n            \n            onSubmit={ (values) =>{\n              Axios.get(\"http://localhost:3001/api/get/\"+values.searchParameter+\"/\"+values.searchValue).then((response)=>{\n                setMusteriler(response.data);\n                console.log(values.searchValue);\n              })\n            }}\n            >\n                    <Form>\n                        <Grid container\n                        marginTop={1}\n                        spacing={2}\n                        direction=\"row\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        >\n                            <Grid item xs={4}>\n                            <Select \n                            name='searchParameter'\n                            label='Arama bölümü seçiniz.'\n                            options={searchparams}\n                            />\n                            </Grid>\n                            <Grid item xs={4}>\n                            <Textfield\n                            name= \"searchValue\"\n                            label=\"Arama\"/>\n                            </Grid>\n\n                            <Grid item xs={4}>\n                                <Button>\n                                    ARA\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Form>\n                </Formik>\n\n            </div>\n\n            {musteriler.map(musteri => {\n                return (\n                    \n                    <Grid  container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    >\n                        \n                        <Grid item xs={12}>\n                        <Link \n                            to={`/musteriler/${musteri.id}`}\n                            key={musteri.id}\n                            className ='musteri-bar'>\n                        <div className='musteri-inside'>\n                        <Typography>Firma:</Typography>\n                        <h3 className='musteri-h3'>{musteri.firmaAdi}</h3> \n                        <Typography>Şehir:</Typography>\n                        <h3 className='musteri-h3'>{musteri.firmaSehir}</h3>\n                        <Typography>Araç Tipi:</Typography>\n                        <h3 className='musteri-h3'>{musteri.firmaAractipi}</h3> \n                      \n                        \n                        </div>\n                        </Link>\n                        </Grid>\n                        \n\n                    </Grid>\n                   \n                )\n            })}\n        </div>\n    )\n}\n","import React ,{useState , useEffect} from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom'\nimport Axios from 'axios';\nimport { Paper } from '@mui/material';\n\nAxios.defaults.withCredentials = true;\n\n\nexport default function CustomerPage() {\n\n    const [musteri , setMusteri] = useState([]);\n    const [gorusme , setGorusme] = useState([]);\n    const [teklifler , setTeklifler] = useState([]);\n    const [temsilciID , setTemsilciID] = useState(0);\n\n    let params = useParams();\n    \n    function getDate(gorusmeDa) {\n         let date = new Date(gorusmeDa);\n         let year = date.getFullYear();\n         let month = date.getMonth()+1;\n         let dt = date.getDate();\n\n          if (dt < 10) {\n          dt = '0' + dt;\n          }\n          if (month < 10) {\n           month = '0' + month;\n          }       \n\n          return (dt+' ' + month + ' '+year);\n    }\n    \n    useEffect(()=>{\n        Axios.get('https://serin-crm.herokuapp.com/api/musteriler/'+params.id+'').then((response)=>{\n          setMusteri(response.data);\n          \n        })\n        Axios.get('https://serin-crm.herokuapp.com/api/get/gorusme/'+params.id+'').then((response)=>{\n          setGorusme(response.data);\n          \n        })\n        Axios.get('https://serin-crm.herokuapp.com/api/get/teklif/'+params.id+'').then((response)=>{\n          setTeklifler(response.data);\n          \n        })\n        console.log(teklifler)\n\n      },[]);\n    \n  \n    return (\n        <div>\n          \n            \n           {musteri.map(a => {\n              \n               return (\n                <Grid container\n                marginTop={1}\n                spacing={1}\n                direction=\"row\">\n                   \n                 <Grid item xs={12} md={6} lg={3}>\n                   <Paper elevation={2} variant='outlined'>\n                      <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri\n                    </Typography>\n                          {a.firmaAdi}\n                      </Typography>\n                   </Paper>\n                 </Grid>\n                 <Grid item xs={12} md={6} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri İlgili Kişisi\n                    </Typography>\n                          {a.firmaIlgilisi}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Telefon Numarası\n                    </Typography>\n                          {a.firmaTelefon}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri Mail Adresi\n                    </Typography>\n                          {a.firmaMail}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri Adresi\n                    </Typography>\n                          {a.firmaAdresi}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri Şehir\n                    </Typography>\n                          {a.firmaSehir}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri Ülke\n                    </Typography>\n                          {a.firmaUlke}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Müşteri Araç Tipi\n                    </Typography>\n                          {a.firmaAractipi}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                 \n                  <Grid item xs={12} md={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                  TEMSİLCİMİZ\n                  </Typography>\n                  <Typography align='center' variant='h4'>\n                   {a.temsilciAdi}\n                  </Typography>\n                   </Paper>\n                  </Grid>\n\n               </Grid>\n               )\n           })}\n           <Grid container\n                marginTop={1}\n                spacing={1}\n                direction=\"row\">\n               \n               </Grid>\n              <Grid container\n                marginTop={1}\n                spacing={1}\n                direction=\"row\">\n               <Grid item xs={12} md={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                  YAPILAN GÖRÜŞMELER\n                  </Typography>\n                 </Paper>\n                 </Grid>\n                 <Grid item xs={12}> \n                  <Link className='musteri-link' to={'/musteriler/yeni-gorusme/'+params.id+''}> Yeni Görüşme Ekle</Link>\n                  </Grid>\n\n                 {gorusme.map(gorusme => {\n                return (\n                    \n                    <Grid  container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    >\n                        \n                        <Grid item xs={12}>\n                        <div className='musteri-inside'>\n                        <Typography>Görüşme Tarihi:</Typography>\n                        <h3 className='musteri-h3'>{getDate(gorusme.tarih)}</h3> \n                        <Typography>Görüşme Konusu:</Typography>\n                        <h3 className='musteri-h3'>{gorusme.konusu}</h3>\n                        <Typography>Görüşme Özeti:</Typography>\n                        <h3 className='musteri-h3'>{gorusme.ozet}</h3> \n                        \n                       \n                        </div>\n                        </Grid>\n                        \n\n                    </Grid>\n                    )\n                  })}\n                  \n               </Grid>\n\n               \n               <Grid container\n                marginTop={1}\n                spacing={1}\n                direction=\"row\">\n              \n               <Grid item xs={12} md={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                  TEKLİFLER \n                  \n                  </Typography> \n                   </Paper>\n\n                  </Grid>\n                  <Grid item xs={12}> \n                  <Link className='musteri-link' to={'/musteriler/yeni-teklif/'+temsilciID+'/'+params.id+''}> Yeni Teklif Ekle</Link>\n                  </Grid>\n                  {teklifler.map(teklif => {\n                return (\n                    \n                    <Grid  container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    spacing={2}\n                    >\n                        \n                        <Grid item xs={12}>\n                        \n                        <Link\n                         className='musteri-bar' \n                         to={'/musteri/teklif/'+teklif.id}\n                        >\n                        <div className='musteri-inside'>\n                        <Typography>Teklif Tarihi:</Typography>\n                        <h3 className='musteri-h3'>{getDate(teklif.teklifTarih)}</h3> \n                        <Typography>Teklif Durumu:</Typography>\n                        <h3 className='musteri-h3'>{teklif.durum}</h3> \n                        <Typography>Teklif Araç Tipi:</Typography>\n                        <h3 className='musteri-h3'>{teklif.aracTipi}</h3>\n                        <Typography>Teklif Birim Fiyatı:</Typography>\n                        <h3 className='musteri-h3'>{teklif.birimFiyati}</h3> \n                      \n                        </div>\n                        \n                       </Link>\n                      </Grid>\n                        \n\n                    </Grid>\n                    )\n                  })}\n               </Grid>\n        \n        </div>\n    )\n}\n","export const navItems = [\n    {\n      id: 1,\n      title: \"AnaSayfa\",\n      path: \"./\",\n      cName: \"nav-item\",\n    },\n    {\n      id: 2,\n      title: \"Müşteriler\",\n      path: \"./musteriler\",\n      cName: \"nav-item\",\n    },\n    {\n      id: 3,\n      title: \"Yeni Müşteri Ekle\",\n      path: \"./yeni-musteri\",\n      cName: \"nav-item\",\n    },\n    \n  ];\n  \n  \n  export const navItemsAdmin = [\n    {\n      id: 1,\n      title: \"AnaSayfa\",\n      path: \"./\",\n      cName: \"nav-item\",\n    },\n    {\n      id: 2,\n      title: \"Müşteriler\",\n      path: \"./musteriler\",\n      cName: \"nav-item\",\n    },\n    {\n      id: 3,\n      title: \"Yeni Müşteri Ekle\",\n      path: \"./yeni-musteri\",\n      cName: \"nav-item\",\n    },\n    {\n      id: 4,\n      title: \"Yeni Temsilci Ekle\",\n      path: \"./register\",\n      cName: \"nav-item\",\n    },\n    \n  ];\n  \n  ","import React , {useEffect , useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport * as Icons from \"react-icons/io\";\nimport './header.css';\nimport { navItems  , navItemsAdmin} from './NavbarItems';\nimport Axios from 'axios';\nimport {useNavigate} from 'react-router-dom';\nimport {useCustomer } from '/Volumes/Data/projeler/crm/client/src/Controllers/StoreSession'\nAxios.defaults.withCredentials = true;\n\n\n\n\nconst Header = () => {\n\n  const {customer , setCustomer } = useCustomer();\n  let navigate = useNavigate();\n\n      const handleClick = () => {\n      Axios.get('http://localhost:3001/auth/logout');\n      navigate('/');\n      setCustomer(null);\n      }\n\n  if(customer.isAdmin){\n    return(\n<>\n      <nav className='navbar'>\n        <Link\n          to='/'\n          className ='navbar-logo'\n        > SerinCRM\n        <Icons.IoIosBriefcase/>\n        </Link>\n        <ul className='nav-Items'>\n          {navItemsAdmin.map(item => {\n            return(\n            <li key={item.id} className ={item.cName}>\n              <Link to={item.path}>{item.title}</Link>\n            </li>\n            )\n          })}\n          <li className='logout'>\n              <button onClick = {handleClick\n                  \n              }> Çıkış </button>\n          </li>\n        </ul>\n\n\n      </nav>\n      \n    </>\n    )\n  }else{\n  return (\n    <>\n      <nav className='navbar'>\n        <Link\n          to='/'\n          className ='navbar-logo'\n        > SerinCRM\n        <Icons.IoIosBriefcase/>\n        </Link>\n        <ul className='nav-Items'>\n          {navItems.map(item => {\n            return(\n            <li key={item.id} className ={item.cName}>\n              <Link to={item.path}>{item.title}</Link>\n            </li>\n            )\n          })}\n          <li className='logout'>\n              <button onClick = {handleClick\n                  \n              }> Çıkış </button>\n          </li>\n        </ul>\n\n\n      </nav>\n      \n    </>\n  );\n}\n};\n\nexport default Header;","import React ,{useState , useEffect} from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { useParams } from 'react-router';\nimport Axios from 'axios';\nimport { Paper } from '@mui/material';\n\n\nAxios.defaults.withCredentials = true;\n\nexport default function PropositionPage() {\n\n    const [musteri , setMusteri] = useState([]);\n    \n\n    let params = useParams();\n  \n    function getDate(gorusmeDa) {\n         let date = new Date(gorusmeDa);\n         let year = date.getFullYear();\n         let month = date.getMonth()+1;\n         let dt = date.getDate();\n\n          if (dt < 10) {\n          dt = '0' + dt;\n          }\n          if (month < 10) {\n           month = '0' + month;\n          }       \n\n          return (dt+' ' + month + ' '+year);\n    }\n    \n    useEffect(()=>{\n        Axios.get('http://localhost:3001/api/get/tekteklif/'+params.id+'').then((response)=>{\n          setMusteri(response.data);\n          \n        })\n       \n\n      },[]);\n    \n  \n    return (\n        <div>\n          \n            \n           {musteri.map(a => {\n              \n               return (\n                <Grid container\n                marginTop={2}\n                spacing={2}\n                direction=\"row\"\n                wrap>\n                  \n                 <Grid item xs={12} md={6} lg={3}>\n                   <Paper elevation={2} variant='outlined'>\n                      <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Araç Tipi\n                    </Typography>\n                          {a.aracTipi}\n                      </Typography>\n                   </Paper>\n                 </Grid>\n                 <Grid item xs={12} md={6} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Araç Adeti\n                    </Typography>\n                          {a.adet}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Birim Fiyat\n                    </Typography>\n                          {a.birimFiyati}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12} md={6} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Para Birimi\n                    </Typography>\n                          {a.paraBirimi}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6} md={4} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Peşinat Miktarı\n                    </Typography>\n                          {a.pesinatMiktari}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6} md={4} lg={3}>\n                 <Paper variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Ödeme Şekli\n                    </Typography>\n                          {a.odemeSekli}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6} md={4} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Vade Süresi\n                    </Typography>\n                          {a.vadeSure}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6} md={4} lg={3}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Teslim Tarihi\n                    </Typography>\n                          {a.teslimTarihi}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  \n                  <Grid item xs={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Teklif Tarihi\n                    </Typography>\n                          {getDate(a.teklifTarih)}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Teklif Durumu\n                    </Typography>\n                          {a.durum}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={6}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                         Teklif Nedeni\n                    </Typography>\n                          {a.neden}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                  <Grid item xs={12}>\n                 <Paper elevation={2} variant='outlined'>\n                 <Typography align='center' variant='h5'>\n                      <Typography align='center' variant='h6'>\n                        \n                        Teklif Notu\n                    </Typography>\n                          {a.teklifNotu}\n                      </Typography>\n                   </Paper>\n                  </Grid>\n                 \n                  \n\n               </Grid>\n               )\n           })}\n           </div>\n    )\n}","import React from 'react';\nimport {TextField} from '@mui/material';\nimport { useField } from 'formik';\n\n\nconst DateTimePicker = ({\n    name,\n    ...otherProps\n}) => {\n    const [field , meta] = useField(name);\n\n    const configDateTimePicker = {\n        ...field,\n        ...otherProps,\n        type: 'date',\n        variant: 'outlined',\n        fullWidth: true,\n        InputLabelProps: {\n            shrink: true\n        }\n    };\n\n    if (meta && meta.touched && meta.error) {\n        configDateTimePicker.error = true;\n        configDateTimePicker.helperText = meta.error;\n    }\n\n\n    return (\n        <TextField\n            {...configDateTimePicker}  \n        />\n    );\n};\n\nexport default DateTimePicker;","import React from 'react'\nimport { Formik , Form } from 'formik';\nimport * as Yup from 'yup'; \nimport {\n  Grid , Container\n  \n} from '@mui/material';\nimport Axios from 'axios';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Select from '../Models/UIWrappers/Select';\nimport Button from '../Models/UIWrappers/Button';\nimport trailers from '../Models/Data/trailers.json';\nimport durum from '../Models/Data/durum.json'\nimport paracins from '../Models/Data/döviz.json'\nimport { useParams } from 'react-router';\nimport DateTimePicker from '../Models/UIWrappers/DateTimePicker';\nimport {useCustomer} from '../Controllers/StoreSession'\nAxios.defaults.withCredentials = true;\n\n\n\nexport default function CreatePropositionPage() {\n    const { customer } = useCustomer();\n    const INITIAL_FORM_STATE ={\n\n        paraBirimi: '',\n        odemeSekli: '',\n        pesinatMiktari:'',\n        vadeSure:'',\n        teslimTarihi:'',\n        teslimYeri:'',\n        durum:'',\n        neden:'',\n        not:'',\n        birimFiyati:0,\n        adet:0,\n        aracTipi:'',\n        teklifTarih:'',\n        temsilciID:customer.id\n        \n    \n    }\n    \n    const FORM_VALIDATION = Yup.object().shape({\n        paraBirimi: Yup.string()\n        .required('Lütfen Para Birimi Giriniz'),\n        odemeSekli: Yup.string()\n        .required('Ödeme Şeklini giriniz'),\n        pesinatMiktari: Yup.string()\n        .required('Peşinat Miktarını giriniz. Tamamen ödendiyse hepsini yazınız.'),\n        vadeSure: Yup.string()\n        .required('Lütfen vade süresini yazınız'),\n        teslimTarihi: Yup.string()\n        .required('Ürünün teslim edileceği süreyi yazınız.'),\n        teslimYeri:Yup.string(),\n        durum: Yup.string()\n        .required('Teklif durumunu seçiniz.'),\n        neden: Yup.string(),\n        not: Yup.string(),\n        birimFiyati: Yup.number()\n        .required('Birim fiyatını Sayı olarak giriniz!'),\n        adet: Yup.number()\n        .required('Adet sayısını sayı olarak giriniz!'),\n        aracTipi: Yup.string()\n        .required('Araç Tipini Seçiniz!'),\n        teklifTarih: Yup.date()\n        .required('Tarihi giriniz.')\n    \n    \n    })\n\n\n    \n    \n    let params = useParams();\n    \n    console.log(customer.id)\n    return (\n        <Grid container marginTop={1} spacing={1}\n        direction=\"row\">\n            <Container>\n            <Formik\n            initialValues ={{\n                ...INITIAL_FORM_STATE,\n                musteriID: params.musteriID,\n                temsilciAdi:customer.adi\n              }}\n              validationSchema ={FORM_VALIDATION}\n              onSubmit={ (values ,{ resetForm}) =>{\n                \n                Axios.post(\"https://serin-crm.herokuapp.com/api/insert/teklif\",{values}).then(()=>{\n                  alert('succesfull insert');\n                  \n                });\n                resetForm();\n                \n              }}\n            >\n                <Form>\n                    <Grid container marginTop= {1} spacing ={1}>\n                \n                    <Grid item xs={12}>\n                        <DateTimePicker\n                        name='teklifTarih'\n                        label='Teklif verdiğiniz tarihi giriniz'/>\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Select \n                        name='aracTipi'\n                        label='Araç Türünü Seçiniz'\n                        options={trailers}\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='adet'\n                        label='Adet belirtiniz'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='birimFiyati'\n                        label='Birim Fiyatını giriniz!'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Select \n                        name='paraBirimi'\n                        label='Para birimini Seçiniz!'\n                        options={paracins}\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='pesinatMiktari'\n                        label='Peşinat'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='vadeSure'\n                        label='Vade Süresi'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Textfield \n                        name='odemeSekli'\n                        label='Müşteri Ödeme Şekli'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='teslimTarihi'\n                        label='Teslimat  Tarihi/Süresi'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='teslimYeri'\n                        label='Teslimat Yeri'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Select \n                        name='durum'\n                        label='Teklif Durumu'\n                        options={durum}\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Textfield \n                        name='neden'\n                        label='Eğer Teklif Red edilirse'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12} >\n                        <Textfield \n                        multiline ={true}\n                        rows={4}\n                        name='not'\n                        label='Eklemek istediğiniz bir şey var ise Buraya yazabilirsiniz.'\n                        />\n\n                    </Grid>\n                    <Grid item xs={12}> \n                    <Button>\n                      Yeni Teklif Ekle\n                    </Button>\n                  </Grid>\n                  </Grid>\n                </Form>\n            </Formik>\n            </Container>\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { Formik , Form } from 'formik';\nimport {\n  Grid , Container\n  \n} from '@mui/material';\nimport Axios from 'axios';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Button from '../Models/UIWrappers/Button';\nimport { useCustomer } from \"../Controllers/StoreSession\";\nimport { useNavigate } from 'react-router-dom';\n\n\n\n\n\nconst instance = Axios.create({\n    withCredentials: true,\n  })\nconst INITIAL_FORM_STATE ={\n    username: '',\n    password:'',\n};\n\nexport default function LoginPage() {\n    let navigate = useNavigate();\n\n\n\n    const { customer , setCustomer } = useCustomer();\n    return (\n        <Grid container\n\n                direction='column'\n                justifyContent ='flex-end'\n                alignItems = 'center'\n                \n                margin = {5}\n               \n                \n        >\n            <Container >\n            <Formik initialValues ={{\n                ...INITIAL_FORM_STATE,\n\n              }}\n             \n              onSubmit={ (values) =>{\n                instance.post(\"'https://serin-crm.herokuapp.com/auth/login\",{values}).then((response)=>{\n                    setCustomer(response.data)\n                    navigate('/');\n                    \n                  });\n                  instance.post('https://serin-crm.herokuapp.com/auth/currentUser').then((response) =>{\n        \n                    setCustomer(response.data)\n                })\n                \n                \n              }}>\n                <Form>\n                    <Grid container direction = 'column' spacing = {2} >\n                    <Grid item xs={8}>\n                        <Textfield\n                        name='username'\n                        label='Kullanıcı Adı\n                        '/>\n                    </Grid>\n                   \n                    <Grid item xs={8}>\n                    <Textfield\n                        name='password'\n                        label='Şifre'\n                        type='password'\n                        />\n                    </Grid>\n                    \n                    <Grid item xs={6}>\n                        <Button>\n                            Giriş\n                        </Button>\n                    </Grid>\n                   </Grid>\n                </Form>\n            </Formik>\n           \n            </Container>\n        </Grid>\n    )\n}\n","import React  from 'react'\nimport { Formik , Form } from 'formik';\nimport * as Yup from 'yup'; \nimport {\n  Container,\n  Grid,\n  Typography\n} from '@mui/material';\nimport Axios from 'axios';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Button from '../Models/UIWrappers/Button';\nimport DateTimePicker from '../Models/UIWrappers/DateTimePicker';\nimport { useCustomer } from '../Controllers/StoreSession';\nimport { useParams } from 'react-router';\n\n\n\n\nAxios.defaults.withCredentials = true;\n\n\nexport default function CreateMeeting() {\n    let params = useParams();\n    const {customer} = useCustomer();\n\n    const INITIAL_FORM_STATE ={\n\n        gorusmeKonusu:'',\n        gorusmeOzeti:'',\n        gorusmeTarihi:'',\n        gorusmeYeri:'',\n        musteriID:params.musteriID,\n        temsilciID:customer.id,\n        temsilciAdi:customer.adi\n      };\n      \n      \n      const FORM_VALIDATION = Yup.object().shape({\n          gorusmeKonusu: Yup.string()\n          .required('Müşteri Ünvanını giriniz!'),\n      \n          gorusmeOzeti: Yup.string()\n          .required('Müşteri Adresini giriniz'),\n      \n          gorusmeYeri: Yup.string()\n          .required('Görüşme Yerini giriniz!'),\n      \n          gorusmeTarihi: Yup.date()\n          .required('Lütfen doldurunuz.'),\n      });\n      \n\n\n\n\n\n\n\n    return (\n        <Grid container marginTop={2}>\n      \n      <Grid item xs={12}>\n        <Container>\n          <div >\n            <Formik\n            initialValues ={{\n              ...INITIAL_FORM_STATE\n            }}\n            validationSchema ={FORM_VALIDATION}\n            onSubmit={ (values ,{ resetForm}) =>{\n              \n              Axios.post(\"https://serin-crm.herokuapp.com/api/insert/gorusme\",{values}).then(()=>{\n                alert('succesfull insert');\n                \n              });\n              resetForm();\n              \n            }}\n            >\n              <Form>\n                <Grid container spacing={2}>\n                 \n                  <Grid item xs={12}  >\n                    <Typography>Görüşme Bilgileri</Typography>\n                  </Grid>\n                  <Grid item xs={6} md={4} lg={4} >\n\n                    <Textfield\n                    name='gorusmeYeri'\n                    label='Görüşme Yeri'\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} md={4} lg={4} >\n\n                  <DateTimePicker \n                    name= \"gorusmeTarihi\"\n                    label=\"Görüşme Tarihi\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={6} md={4} lg={4} >\n\n                  <Textfield \n                    name= \"gorusmeKonusu\"\n                    label=\"Görüşme Konusu\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}> \n                  <Textfield\n                    name= \"gorusmeOzeti\"\n                    label=\"Görüşme Özeti\"\n                    multiline\n                    rows={3}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}> \n                    <Button>\n                      Yeni Görüşme Ekle\n                    </Button>\n                  </Grid>\n\n\n\n                </Grid>\n\n              </Form>\n            </Formik>\n\n          </div>\n        </Container>\n      </Grid>\n    </Grid>\n    )\n};\n\n\n\n\n","import React from 'react'\nimport { Formik , Form } from 'formik';\nimport * as Yup from 'yup'; \nimport {\n  Grid , Container\n  \n} from '@mui/material';\nimport Axios from 'axios';\nimport Textfield from '../Models/UIWrappers/Textfield';\nimport Button from '../Models/UIWrappers/Button';\nimport Select from '../Models/UIWrappers/Select';\nimport departmans from '../Models/Data/departman.json';\nAxios.defaults.withCredentials = true;\n\nconst INITIAL_FORM_STATE ={\n    username:'',\n    mail: '',\n    password:'',\n    adi:'',\n    departman:'',\n    soyadi:''\n};\n\n\nexport default function CreateUser() {\n    return (\n       \n        <Grid container\n            margin = {5}  \n            \n\n        >   \n            <Grid item xs={12}>\n        <Container>\n            <Formik initialValues ={{\n                ...INITIAL_FORM_STATE,\n\n              }}\n             \n              onSubmit={ (values) =>{\n                \n                Axios.post(\"https://serin-crm.herokuapp.com/auth/register\",{values}).then((response)=>{\n                  console.log(response);\n                });\n                \n              }}>\n                <Form>\n                    <Grid container spacing = {2}>\n                        <Grid item xs={6}>\n                            <Textfield\n                            name='adi'\n                            label='Temsilci Adı \n                            '/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Textfield\n                            name='soyadi'\n                            label='Temsilci  Soyadı\n                            '/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Textfield\n                            name='mail'\n                            label='Temsilci Mail Adresi\n                            '/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Select\n                            name='departman'\n                            label='Departman'\n                            options={departmans}\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Textfield\n                            name='username'\n                            label='Kullanıcı Adı'\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Textfield\n                            name='password'\n                            label='Şifre'\n                            />\n                        </Grid>\n                    <Grid item xs={12}>\n                        <Button>\n                            Temsilci Hesabı oluştur.\n                        </Button>\n                    </Grid>\n                  </Grid>\n                </Form>\n             </Formik>\n            </Container>\n        </Grid>\n     </Grid>\n    )\n}\n","import React , { useEffect , useState}from 'react';\nimport Axios from 'axios';\nimport {Grid, Paper, Typography} from '@mui/material'\nimport { Link } from 'react-router-dom';\n\n\nAxios.defaults.withCredentials = true;\n\nexport default function HomePageGorusme() {\n    const today = new Date();\n    const [gorusmeler , setGorusmeler] = useState([{}]);\n    useEffect(()=>{\n        \n        \n\n        \n        Axios.get('https://serin-crm.herokuapp.com/api/get/gorusmeler').then((response)=>{\n          setGorusmeler(response.data);\n          \n          \n        })\n      },[]);\n    return (\n       <Grid container\n       direction='column' \n       marginLeft = {1}\n       >\n        \n           <Paper>\n\n           {gorusmeler.map( a => {\n               console.log(a)\n               return(\n            <Grid item xs={12} margin={1} padding={1}> \n            <Paper>  \n            <Link className='homepageStacks' to={'/musteriler/'+a.musteriID}>\n            <Typography>\n                {a.temsilciAdi}  , {a.id} ile bir görüşme oluşturdu!  \n            </Typography>\n\n            </Link>\n            </Paper>\n            </Grid>\n               \n               )\n\n           })\n\n           }\n           \n           </Paper>\n       </Grid>\n    )\n}\n","import React , { useEffect , useState}from 'react';\nimport Axios from 'axios';\nimport {Grid, Paper, Typography} from '@mui/material'\nimport { Link } from 'react-router-dom';\n\n\nAxios.defaults.withCredentials = true;\n\nexport default function HomePageTeklifler() {\n    const today = new Date();\n    const [teklifler , setTeklifler] = useState([{}]);\n    useEffect(()=>{\n        \n        \n\n        \n        Axios.get('https://serin-crm.herokuapp.com/api/get/teklifler').then((response)=>{\n          setTeklifler(response.data);\n          \n          \n        })\n      },[]);\n    return (\n       <Grid container\n       direction='column'\n       \n       marginLeft = {1}\n       >\n        \n           <Paper>\n\n           {teklifler.map( a => {\n               console.log(a)\n               return(\n            <Grid item xs={12} margin={1} padding={1}> \n            <Paper>  \n            <Link className='homepageStacks' to={'/musteri/teklif/'+a.id}>\n            <Typography>\n                {a.temsilciAdi}  , {a.id} numaralı Teklif'i sisteme yükledi.\n            </Typography>\n\n            </Link>\n            </Paper>\n            </Grid>\n               \n               )\n\n           })\n\n           }\n           \n           </Paper>\n       </Grid>\n    )\n}\n","import React , { useEffect , useState}from 'react';\nimport Axios from 'axios';\nimport {Grid, Paper, Typography} from '@mui/material'\nimport { Link } from 'react-router-dom';\n\n\nAxios.defaults.withCredentials = true;\n\nexport default function HomePageTamamlanmamışTeklifler() {\n    function getDate(gorusmeDa) {\n        let date = new Date(gorusmeDa);\n        let year = date.getFullYear();\n        let month = date.getMonth()+1;\n        let dt = date.getDate();\n\n         if (dt < 10) {\n         dt = '0' + dt;\n         }\n         if (month < 10) {\n          month = '0' + month;\n         }       \n\n         return (dt+' ' + month + ' '+year);\n   }\n\n    const [redTeklifler , setRedTeklifler] = useState([{}]);\n    useEffect(()=>{\n        \n        \n\n        \n        Axios.get('https://serin-crm.herokuapp.com/api/get/teklifRed').then((response)=>{\n          setRedTeklifler(response.data);\n          \n          \n        })\n      },[]);\n    return (\n       <Grid container\n       direction='column' \n       marginLeft = {1}\n       >\n        \n           <Paper>\n\n           {redTeklifler.map( a => {\n               console.log(a)\n               return(\n            <Grid item xs={12} margin={1} padding={1}> \n            <Paper>  \n            <Link className='homepageStacks' to={'/musteri/teklif/'+a.id}>\n            <Typography>\n                {a.temsilciAdi}  |  {a.durum} | {a.neden}  | {getDate(a.teklifTarih)}\n            </Typography>\n\n            </Link>\n            </Paper>\n            </Grid>\n               \n               )\n\n           })\n\n           }\n           \n           </Paper>\n       </Grid>\n    )\n}\n","import { Container, Grid, Typography } from '@mui/material';\nimport React , {useState} from 'react'\nimport {useCustomer} from '../Controllers/StoreSession'\nimport Gorusmeler from '../Models/UIWrappers/HomepageGorusmeler/index'\nimport Teklifler from '../Models/UIWrappers/HomepageTeklifler/index'\nimport RedTeklifler from '../Models/UIWrappers/HomepageTamamlanmamış/index'\n\n\nexport default function HomePage() {\n    const {customer , setCustomer } = useCustomer();\n    const kullaniciAdi = customer.adi;\n    \n    return (\n        <div>\n            <h1>Hoşgeldin {kullaniciAdi}</h1>\n            <Grid container\n            wrap\n            spacing={2}>\n                \n            <Grid item xs={6}>\n                <Typography> Son Görüşmeler </Typography>\n                <Gorusmeler/>\n            </Grid>\n            <Grid item xs={6}>\n            <Typography>Son Yapılan Teklifler</Typography>\n                <Teklifler/>\n            </Grid>\n            <Grid item xs={12}>\n            <Typography> Tamamlanmamış yada Red olan teklifler</Typography>\n                <RedTeklifler/>\n            </Grid>\n            </Grid>\n            \n        </div>\n    )\n}\n","import './App.css';\nimport { Routes, Route} from \"react-router-dom\";\nimport NewCustomerPage from './Views/NewCustomerPage';\nimport Customers from './Views/Customers';\nimport CustomerPage from './Views/CustomerPage';\nimport Header from './Models/UIWrappers/Header';\nimport PropositionPage from './Views/PropositionPage';\nimport CreatePropositionPage from './Views/CreatePropositionPage';\nimport LoginPage from './Views/LoginPage';\nimport CreateMeeting from './Views/CreateMeeting';\nimport CreateUser from './Views/CreateUser';\nimport Axios from 'axios';\nimport { useCustomer } from \"./Controllers/StoreSession\";\nimport HomePage from './Views/HomePage';\n\n\nAxios.defaults.withCredentials = true;\n\n\n\n\nfunction App() {\n\n\nconst { customer, setCustomer } = useCustomer();\n  if(customer) {\n    return (\n    <div>\n      <Header/>\n      <Routes>\n      <Route exact path=\"/\" element={<HomePage />}/>\n      <Route path=\"login\" element={<LoginPage />}/>\n      <Route path=\"register\" element={<CreateUser />}/>\n      <Route path=\"musteriler\" element={<Customers />}/>\n      <Route path=\"musteriler/yeni-teklif/:temsilciID/:musteriID\" element={<CreatePropositionPage />}/>\n      <Route path=\"musteriler/yeni-gorusme/:musteriID\" element={<CreateMeeting />}/>\n      <Route path='musteriler/:id' element={<CustomerPage />} />\n      <Route path=\"yeni-musteri\" element={<NewCustomerPage />} />\n      <Route path=\"musteri/teklif/:id\" element={<PropositionPage />} />\n      </Routes>\n    </div>\n    )\n  }else{\n    return(\n      <LoginPage/>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { CustomerWrapper } from './Controllers/StoreSession'\n\n\n\nReactDOM.render(\n  <CustomerWrapper>\n  <BrowserRouter>\n   <App />\n  </BrowserRouter>\n  </CustomerWrapper>\n  ,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}